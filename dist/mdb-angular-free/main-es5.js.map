{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.routing.module.ts","webpack:///src/app/layout/footer/footer.component.ts","webpack:///src/app/layout/footer/footer.component.html","webpack:///src/app/layout/layout.module.ts","webpack:///src/app/layout/menu/menu.component.ts","webpack:///src/app/layout/menu/menu.component.html","webpack:///src/app/pages/treasury/account/account.component.ts","webpack:///src/app/pages/treasury/account/account.component.html","webpack:///src/app/pages/treasury/charts-treasury/charts-treasury.component.ts","webpack:///src/app/pages/treasury/charts-treasury/charts-treasury.component.html","webpack:///src/app/pages/treasury/historic/historic.component.ts","webpack:///src/app/pages/treasury/historic/historic.component.html","webpack:///src/app/pages/treasury/income/income.component.ts","webpack:///src/app/pages/treasury/income/income.component.html","webpack:///src/app/pages/treasury/income/income.service.ts","webpack:///src/app/pages/treasury/inventory/inventory.component.ts","webpack:///src/app/pages/treasury/inventory/inventory.component.html","webpack:///src/app/pages/treasury/report/report.component.ts","webpack:///src/app/pages/treasury/report/report.component.html","webpack:///src/app/pages/treasury/transactions/transactions.component.ts","webpack:///src/app/pages/treasury/transactions/transactions.component.html","webpack:///src/app/pages/treasury/treasury.component.ts","webpack:///src/app/pages/treasury/treasury.component.html","webpack:///src/app/pages/treasury/treasury.module.ts","webpack:///src/app/pages/user/auth-user/auth-user.component.ts","webpack:///src/app/pages/user/auth-user/auth-user.component.html","webpack:///src/app/pages/user/create-user/confirm-account/confirm-account.component.ts","webpack:///src/app/pages/user/create-user/confirm-account/confirm-account.component.html","webpack:///src/app/pages/user/create-user/create-user.component.ts","webpack:///src/app/pages/user/create-user/create-user.component.html","webpack:///src/app/pages/user/user.module.ts","webpack:///src/app/shared/auth/auth-user.guard.ts","webpack:///src/app/shared/auth/auth-user.interceptor.ts","webpack:///src/app/shared/models/enums/transaction-type.enum.ts","webpack:///src/app/shared/models/expense.entity.ts","webpack:///src/app/shared/models/income.entity.ts","webpack:///src/app/shared/models/inventory.entity.ts","webpack:///src/app/shared/models/pagination.entity.ts","webpack:///src/app/shared/models/recipe.entity.ts","webpack:///src/app/shared/models/report.entity.ts","webpack:///src/app/shared/models/treasury.entity.ts","webpack:///src/app/shared/models/user.entity.ts","webpack:///src/app/shared/pagination/pagination.component.ts","webpack:///src/app/shared/pagination/pagination.component.html","webpack:///src/app/shared/pagination/pagination.module.ts","webpack:///src/app/shared/pagination/pagination.service.ts","webpack:///src/app/shared/services/auth.service.ts","webpack:///src/app/shared/services/historic.service.ts","webpack:///src/app/shared/services/inventory.service.ts","webpack:///src/app/shared/services/report.service.ts","webpack:///src/app/shared/services/transactions.service.ts","webpack:///src/app/shared/services/treasury.service.ts","webpack:///src/app/shared/services/user.service.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/validators/date.validator.ts","webpack:///src/app/shared/validators/password.validator.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","map","webpackContext","webpackContextResolve","__webpack_require__","o","webpackContextKeys","Object","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","forRoot","declarations","imports","providers","bootstrap","AppRoutingModule","path","component","canActivate","FooterComponent","year","Date","getFullYear","icons","LayoutModule","MenuComponent","service","router","usuario","localStorage","getItem","logoutUser","navigateByUrl","account","AccountComponent","userService","_fb","toastr","user","loading","userId","parseInt","findById","subscribe","response","error","errorMessage","add","modal","show","form","patchValue","name","surname","email","whatzapp","username","password","update","success","message","progressBar","hide","load","err","status","info","removeItem","details","group","required","minLength","maxLength","abrirModal","atualizar","ChartsTreasuryComponent","treasury","chartType","chartDatasets","data","chartLabels","chartColors","backgroundColor","chartOptions","responsive","scales","xAxes","ticks","callback","value","yAxes","tooltips","callbacks","label","tooltipItem","plugins","datalabels","display","push","incomeRecipes","incomeExpenses","currentBalance","initialAmount","feedChart","HistoricComponent","historicService","historic","years","yearSelected","transactions","billing","inventories","transactionsColors","billingColors","inventoriesColors","url","split","getHistoric","body","populate","incomes","incomeYearly","forEach","income","history","historyYearly","item","cumulativeBilling","monthlyBiiling","inventoryYearly","historicInventoriesYearly","inventory","actualBalance","discrepancy","IncomeComponent","tresuryService","treasuryId","getResume","console","log","IncomeService","emitterIncome","emit","InventoryComponent","rows","inventoriesSelected","dateValidator","selected","findAll","newInventory","registeredIn","toDate","save","res","fire","text","icon","showCancelButton","confirmButtonText","cancelButtonText","result","row","f","format","reset","validate","showModalCreate","whenSelecting","saveOrUpdateInventory","ReportComponent","report","annualReport","subscriptions","months","monthSelected","recipes","expenses","labelsRecipes","labelsExpenses","colorsRecipes","colorsExpenses","getReport","month","indexOf","Array","isArray","recipe","expense","downloadReport","newWin","open","document","write","sub","unsubscribe","download","TransactionsComponent","transactionsService","transactionsSelected","transactionType","typeTransactionSelected","types","incomeComponent","resetFormRecipes","resetFormExpenses","formRecipes","description","offerer","formExpenses","newRecipe","type","RECIPE","createRecipe","updateRecipe","newExpense","EXPENSE","createExpense","updateExpense","transaction","deleteRecipe","deleteExpense","modalUpdateRecipe","modalUpdateExpense","showModalRecipe","showModalExpense","hideModalRecipe","saveOrUpdateRecipe","saveOrUpdateExpense","hideModalUpdateExpense","TreasuryComponent","servico","paginationService","search","treasuries","pagination","paginacao","findPaginate","loader","count","pageCurrent","dados","hideModalCreate","hideModalUpdate","remove","r","modalCreate","modalUpdate","valueChanges","pipe","filter","changePage","createOrUpdateTreasury","TreasuryModule","SERVER_OFFLINE","AuthUserComponent","loginUser","decodePayloadJWT","access_token","positionClass","token","setItem","userid","input","_elementRef","nativeElement","firstChild","showPassword","hidePassword","signIn","toNewUser","ConfirmAccountComponent","finalizeRegistration","resendCode","validators","CreateUserComponent","passwordValidator","create","erro","confirmPassword","confirmed","toLogin","createUser","UserModule","AuthUserGuard","route","state","userIsAutenticate","AuthUserInterceptor","next","idToken","cloned","clone","headers","set","handle","TransactionType","Expense","values","assign","Income","Inventory","Pagination","Recipe","Report","balanceMonthly","incomeRecipesMonthly","incomeExpensesMonthly","Treasury","User","updated","PaginationComponent","disabled","previous","isActive","pages","isVisible","emitirTamanho","size","generatePages","indexPage","n","getLength","i","page","x","toFixed","index","getIndex","length","PaginationModule","PaginationService","AuthService","http","urlBase","post","HistoricService","_params","get","concat","observe","params","InventoryService","inventoryUpdated","put","inventoryId","options","ReportService","responseType","TransactionsService","recipeId","expenseId","TreasuryService","UserService","SharedModule","DateValidator","control","date","isValid","invalidDate","PasswordValidator","controlName","matchingControlName","formGroup","controls","matchingControl","errors","confirmedValidator","setErrors","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'mdb-angular-free';\r\n}\r\n","<router-outlet></router-outlet>","\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TreasuryModule } from './pages/treasury/treasury.module';\r\nimport { AppRoutingModule } from './app.routing.module';\r\nimport { AuthService } from './shared/services/auth.service';\r\nimport { AuthUserGuard } from './shared/auth/auth-user.guard';\r\nimport { AuthUserInterceptor } from './shared/auth/auth-user.interceptor';\r\nimport { PaginationService } from './shared/pagination/pagination.service';\r\nimport { UserModule } from './pages/user/user.module';\r\nimport { IncomeService } from './pages/treasury/income/income.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    MDBBootstrapModule.forRoot(),\r\n    FormsModule,\r\n    TreasuryModule,\r\n    UserModule,\r\n    AppRoutingModule,\r\n  ],\r\n  providers: [\r\n    AuthUserGuard, \r\n    AuthService,\r\n    PaginationService,\r\n    IncomeService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AuthUserInterceptor,\r\n      multi: true\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AuthUserGuard } from './shared/auth/auth-user.guard';\r\nimport { TreasuryComponent } from './pages/treasury/treasury.component';\r\nimport { TransactionsComponent } from './pages/treasury/transactions/transactions.component';\r\nimport { ReportComponent } from './pages/treasury/report/report.component';\r\nimport { HistoricComponent } from './pages/treasury/historic/historic.component';\r\nimport { InventoryComponent } from './pages/treasury/inventory/inventory.component';\r\nimport { CreateUserComponent } from './pages/user/create-user/create-user.component';\r\nimport { ConfirmAccountComponent } from './pages/user/create-user/confirm-account/confirm-account.component';\r\nimport { AccountComponent } from './pages/treasury/account/account.component';\r\nimport { AuthUserComponent } from './pages/user/auth-user/auth-user.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forRoot([\r\n            { path: 'home', component: TreasuryComponent, canActivate: [AuthUserGuard] },\r\n            { path: 'transactions/:id', component: TransactionsComponent, canActivate: [AuthUserGuard] },\r\n            { path: 'report/:id', component: ReportComponent, canActivate: [AuthUserGuard] },\r\n            { path: 'historic/:id', component: HistoricComponent, canActivate: [AuthUserGuard] },\r\n            { path: 'inventory/:id', component: InventoryComponent, canActivate: [AuthUserGuard] },\r\n            { path: 'account', component: AccountComponent, canActivate: [AuthUserGuard] },\r\n            { path: 'user/create', component: CreateUserComponent },\r\n            { path: 'confirm/account', component: ConfirmAccountComponent },\r\n            { path: 'user/auth', component: AuthUserComponent }\r\n        ])\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class AppRoutingModule {}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  public year = new Date().getFullYear();\r\n  public icons = [\r\n    'fab fa-facebook',\r\n    'fab fa-instagram',\r\n    'fab fa-youtube',\r\n    'fab fa-whatsapp',\r\n    'fab fa-telegram',\r\n  ];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<footer>\r\n    <ul>\r\n        <li *ngFor=\"let icon of icons\">\r\n            <a>\r\n                <i [ngClass]=\"icon\"></i>\r\n            </a>\r\n        </li>\r\n    </ul>\r\n    <p>© {{ year }} Copyright - Todos os direitos autorais estão reservados.</p>\r\n</footer>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AppRoutingModule } from '../app.routing.module';\r\nimport { MenuComponent } from './menu/menu.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { AuthService } from '../shared/services/auth.service';\r\nimport { FooterComponent } from './footer/footer.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MenuComponent, \r\n    FooterComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    AppRoutingModule\r\n  ],\r\n  exports: [\r\n    MenuComponent,\r\n    FooterComponent\r\n  ],\r\n  providers: [\r\n    AuthService \r\n  ]\r\n})\r\nexport class LayoutModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AuthService } from 'src/app/shared/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.scss']\r\n})\r\nexport class MenuComponent implements OnInit {\r\n\r\n  public usuario: string = '';\r\n\r\n  public constructor(private service: AuthService, private router: Router) { \r\n    this.usuario = localStorage.getItem(\"name_user\");\r\n  }\r\n\r\n  public logoutUser() {\r\n    this.service.logoutUser();\r\n  }\r\n\r\n  public account() {\r\n    this.router.navigateByUrl('/account');\r\n  }\r\n\r\n  ngOnInit() { }\r\n}\r\n","<mdb-navbar SideClass=\"navbar navbar-expand-sm navbar-dark\" [containerInside]=\"false\">\r\n    <mdb-navbar-brand>\r\n        <img class=\"logo\" src=\"/assets/img/logotipo.png\" alt=\"logotipo\" width=\"50px\" height=\"50px\">\r\n        <a routerLink=\"/home\" class=\"navbar-brand\">TREASURY</a>\r\n    </mdb-navbar-brand>\r\n    <links>\r\n        <ul class=\"navbar-nav ml-auto\"> \r\n            <li class=\"nav-item\">\r\n                <a routerLink=\"/home\" class=\"nav-link waves-light\" mdbWavesEffect><mdb-icon fas icon=\"home\"></mdb-icon> Inicio</a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" [matMenuTriggerFor]=\"menuUsuer\" mdbWavesEffect>\r\n                    <mdb-icon fas icon=\"user\" mdbDropdownToggle></mdb-icon> {{ usuario }}\r\n                </a>\r\n                <mat-menu #menuUsuer=\"matMenu\">\r\n                    <button style=\"outline: none;\" mat-menu-item (click)=\"account()\"><mat-icon>account_circle</mat-icon>Conta</button>\r\n                    <button style=\"outline: none;\" mat-menu-item (click)=\"logoutUser()\" ><mat-icon>power_settings_new</mat-icon>Sair</button>\r\n                </mat-menu>  \r\n            </li>\r\n        </ul>\r\n    </links>\r\n</mdb-navbar>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport { UserService } from 'src/app/shared/services/user.service';\r\nimport { User } from 'src/app/shared/models/user.entity';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-account',\r\n  templateUrl: './account.component.html',\r\n  styleUrls: ['./account.component.scss']\r\n})\r\nexport class AccountComponent implements OnInit {\r\n\r\n  public form: FormGroup;\r\n  public user = new User();\r\n  public loading = true;\r\n  @ViewChild('modal') modal: any;\r\n\r\n  public constructor(\r\n                      private readonly userService: UserService,\r\n                      private readonly _fb: FormBuilder, \r\n                      private readonly toastr: ToastrService,\r\n                      private readonly router: Router\r\n                    ) { }\r\n\r\n  public load() {\r\n    this.loading= true;\r\n    const userId = parseInt(localStorage.getItem(\"user_id\"));\r\n    this.userService.findById(userId).subscribe( response => {\r\n      this.user = response;\r\n    }, error => {\r\n      this.errorMessage(error);\r\n    }).add( () => {\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  public abrirModal() {\r\n    this.modal.show();\r\n\r\n    this.form.patchValue({\r\n      name: this.user.name,\r\n      surname: this.user.surname,\r\n      email: this.user.email,\r\n      whatzapp: this.user.whatzapp,\r\n      username: this.user.username,\r\n      password: this.user.password,\r\n    });\r\n  }\r\n\r\n  public atualizar(usuario: User) {\r\n    const user = new User({\r\n      id: parseInt(localStorage.getItem(\"user_id\")),\r\n      name: usuario.name,\r\n      surname: usuario.surname,\r\n      email: usuario.email,\r\n      whatzapp: usuario.whatzapp,\r\n      username: usuario.username,\r\n      password: usuario.password\r\n    });\r\n    this.loading = true;\r\n    this.userService.update(user).subscribe( response => {\r\n      this.toastr.success(response.message, 'Feito', { progressBar: true });\r\n      this.modal.hide();\r\n      this.load();\r\n    },\r\n    error => {\r\n      this.errorMessage(error);\r\n    }).add( () => {\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  public errorMessage(err: any) {\r\n    if(err.status == 0) {\r\n      this.toastr.error('Servidor Inacessível', 'ERRO', { progressBar: true });\r\n    }\r\n\r\n    else if(err.status == 401) {\r\n      this.router.navigateByUrl('/login');\r\n      this.toastr.info('Necessário autenticação', 'ERRO', { progressBar: true });\r\n      localStorage.removeItem('id_token');\r\n      localStorage.removeItem('user_id');\r\n    }\r\n    else {\r\n      this.toastr.error(err.error.details, 'ERRO', { progressBar: true });\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.load();\r\n    this.form = this._fb.group({\r\n      name: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(30)]],\r\n      surname: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(30)]],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      whatzapp: ['', [Validators.required]],\r\n      username: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(30)]],\r\n      password: ['', Validators.required]\r\n    });\r\n  }\r\n}","<app-menu></app-menu>\r\n<div class=\"body body-background\">\r\n    <div class=\"hero hero-background\">\r\n        <div class=\"row header-page\">\r\n            <div class=\"col-sm-6 col-md-8 col-lg-9 col-xl-10\">\r\n                <div class=\"name-page\">\r\n                    <mat-icon>admin_panel_settings</mat-icon>\r\n                    <h2>Configurações</h2>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-sm-6 col-md-4 col-lg-3 col-xl-2\">\r\n                <button type=\"button\" mdbBtn color=\"light\" block=\"true\" class=\"z-depth-0\" (click)=\"abrirModal()\" mdbWavesEffect>EDITAR CONTA</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"account z-depth-1-half\">\r\n        <div class=\"main\">\r\n            <div *ngIf=\"loading\">\r\n                <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                    <mdb-card mdbWavesEffect>\r\n                        <mdb-card-body>\r\n                            <mat-icon>miscellaneous_services</mat-icon>\r\n                            <mdb-card-title>\r\n                                <p>Situação da conta</p>\r\n                            </mdb-card-title>\r\n                            <mdb-card-title>\r\n                                <h4>{{ user.isActive == true ? 'Ativa' : 'Inativa' }}</h4>\r\n                            </mdb-card-title>                   \r\n                        </mdb-card-body>\r\n                    </mdb-card>\r\n                </div>\r\n                <div class=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                    <mdb-card mdbWavesEffect>\r\n                        <mdb-card-body>\r\n                            <mat-icon>email</mat-icon>\r\n                            <mdb-card-title>\r\n                                <p>Seu email</p>\r\n                            </mdb-card-title>\r\n                            <mdb-card-title>\r\n                                <h4>{{ user.email }}</h4>\r\n                            </mdb-card-title>                   \r\n                        </mdb-card-body>\r\n                    </mdb-card>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\">\r\n                    <mdb-card mdbWavesEffect>\r\n                        <mdb-card-body>\r\n                            <mat-icon>face</mat-icon>\r\n                            <mdb-card-title>\r\n                                <p>Seu nome</p>\r\n                            </mdb-card-title>\r\n                            <mdb-card-title>\r\n                                <h4>{{ user.name }}</h4>\r\n                            </mdb-card-title>                   \r\n                        </mdb-card-body>\r\n                    </mdb-card>\r\n                </div>\r\n                <div class=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\">\r\n                    <mdb-card mdbWavesEffect>\r\n                        <mdb-card-body>\r\n                            <mat-icon>account_box</mat-icon>\r\n                            <mdb-card-title>\r\n                                <p>Seu sobrenome</p>\r\n                            </mdb-card-title>\r\n                            <mdb-card-title>\r\n                                <h4>{{ user.surname }}</h4>\r\n                            </mdb-card-title>                   \r\n                        </mdb-card-body>\r\n                    </mdb-card>\r\n                </div>\r\n                <div class=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\">\r\n                    <mdb-card mdbWavesEffect>\r\n                        <mdb-card-body>\r\n                            <mat-icon>contacts</mat-icon>\r\n                            <mdb-card-title>\r\n                                <p>Usuario de acesso</p>\r\n                            </mdb-card-title>\r\n                            <mdb-card-title>\r\n                                <h4>{{ user.username }}</h4>\r\n                            </mdb-card-title>                   \r\n                        </mdb-card-body>\r\n                    </mdb-card>\r\n                </div>\r\n                <div class=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\">\r\n                    <mdb-card mdbWavesEffect>\r\n                        <mdb-card-body>\r\n                            <mat-icon>phone</mat-icon>\r\n                            <mdb-card-title>\r\n                                <p>Whatzapp</p>\r\n                            </mdb-card-title>\r\n                            <mdb-card-title>\r\n                                <h4>{{ user.whatzapp }}</h4>\r\n                            </mdb-card-title>                   \r\n                        </mdb-card-body>\r\n                    </mdb-card>\r\n                </div>\r\n                <div class=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\">\r\n                    <mdb-card mdbWavesEffect>\r\n                        <mdb-card-body>\r\n                            <mat-icon>security</mat-icon>\r\n                            <mdb-card-title>\r\n                                <p>Senha de acesso</p>\r\n                            </mdb-card-title> \r\n                            <mdb-card-title>\r\n                                <h4>{{ user.password }}</h4>\r\n                            </mdb-card-title>                   \r\n                        </mdb-card-body>\r\n                    </mdb-card>\r\n                </div>\r\n                <div class=\"col-sm-12 col-md-6 col-lg-4 col-xl-4\">\r\n                    <mdb-card mdbWavesEffect>\r\n                        <mdb-card-body>\r\n                            <mat-icon>date_range</mat-icon>\r\n                            <mdb-card-title>\r\n                                <p>Última atualização</p>\r\n                            </mdb-card-title>\r\n                            <mdb-card-title>\r\n                                <h4>{{ user.updated | date: 'dd/MM/yyyy'}}</h4>\r\n                            </mdb-card-title>                   \r\n                        </mdb-card-body>\r\n                    </mdb-card>\r\n                </div>\r\n                <div class=\"col\">\r\n                    <mdb-card mdbWavesEffect class=\"aviso\">\r\n                        <mdb-card-body>\r\n                            <mat-icon>info</mat-icon>\r\n                            <mdb-card-title>\r\n                                <h4>Atenção</h4>\r\n                            </mdb-card-title>  \r\n                            <mdb-card-title>\r\n                                <p>Evite a exposição das suas informações, não nos responsabilizamos por eventuais vazamentos de dados</p>\r\n                            </mdb-card-title>                 \r\n                        </mdb-card-body>\r\n                    </mdb-card>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"mobile body-background\">\r\n    <div class=\"hero hero-background\">\r\n        <div class=\"header-page\">\r\n            <div class=\"name-page\">\r\n                <mat-icon>admin_panel_settings</mat-icon>\r\n                <h2>Configurações</h2>\r\n            </div>\r\n            <button type=\"button\" mdbBtn color=\"light\" block=\"true\" class=\"z-depth-0\" (click)=\"abrirModal()\" mdbWavesEffect>EDITAR CONTA</button>\r\n        </div>\r\n    </div>\r\n    <div class=\"account\">\r\n        <div class=\"loading\" *ngIf=\"loading\">\r\n            <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-12\">\r\n                <mdb-card mdbWavesEffect>\r\n                    <mdb-card-body>\r\n                        <mat-icon>miscellaneous_services</mat-icon>\r\n                        <mdb-card-title>\r\n                            <p>Situação da conta</p>\r\n                        </mdb-card-title>\r\n                        <mdb-card-title>\r\n                            <h4>{{ user.isActive == true ? 'Ativa' : 'Inativa' }}</h4>\r\n                        </mdb-card-title>                   \r\n                    </mdb-card-body>\r\n                </mdb-card>\r\n            </div>\r\n            <div class=\"col-12\">\r\n                <mdb-card mdbWavesEffect>\r\n                    <mdb-card-body>\r\n                        <mat-icon>email</mat-icon>\r\n                        <mdb-card-title>\r\n                            <p>Seu email</p>\r\n                        </mdb-card-title>\r\n                        <mdb-card-title>\r\n                            <h4>{{ user.email }}</h4>\r\n                        </mdb-card-title>                   \r\n                    </mdb-card-body>\r\n                </mdb-card>\r\n            </div>\r\n            <div class=\"col-12\">\r\n                <mdb-card mdbWavesEffect>\r\n                    <mdb-card-body>\r\n                        <mat-icon>face</mat-icon>\r\n                        <mdb-card-title>\r\n                            <p>Seu nome</p>\r\n                        </mdb-card-title>\r\n                        <mdb-card-title>\r\n                            <h4>{{ user.name }}</h4>\r\n                        </mdb-card-title>                   \r\n                    </mdb-card-body>\r\n                </mdb-card>\r\n            </div>\r\n            <div class=\"col-12\">\r\n                <mdb-card mdbWavesEffect>\r\n                    <mdb-card-body>\r\n                        <mat-icon>account_box</mat-icon>\r\n                        <mdb-card-title>\r\n                            <p>Seu sobrenome</p>\r\n                        </mdb-card-title>\r\n                        <mdb-card-title>\r\n                            <h4>{{ user.surname }}</h4>\r\n                        </mdb-card-title>                   \r\n                    </mdb-card-body>\r\n                </mdb-card>\r\n            </div>\r\n            <div class=\"col-12\">\r\n                <mdb-card mdbWavesEffect>\r\n                    <mdb-card-body>\r\n                        <mat-icon>contacts</mat-icon>\r\n                        <mdb-card-title>\r\n                            <p>Usuario de acesso</p>\r\n                        </mdb-card-title>\r\n                        <mdb-card-title>\r\n                            <h4>{{ user.username }}</h4>\r\n                        </mdb-card-title>                   \r\n                    </mdb-card-body>\r\n                </mdb-card>\r\n            </div>\r\n            <div class=\"col-12\">\r\n                <mdb-card mdbWavesEffect>\r\n                    <mdb-card-body>\r\n                        <mat-icon>phone</mat-icon>\r\n                        <mdb-card-title>\r\n                            <p>Whatzapp</p>\r\n                        </mdb-card-title>\r\n                        <mdb-card-title>\r\n                            <h4>{{ user.whatzapp }}</h4>\r\n                        </mdb-card-title>                   \r\n                    </mdb-card-body>\r\n                </mdb-card>\r\n            </div>\r\n            <div class=\"col-12\">\r\n                <mdb-card mdbWavesEffect>\r\n                    <mdb-card-body>\r\n                        <mat-icon>security</mat-icon>\r\n                        <mdb-card-title>\r\n                            <p>Senha de acesso</p>\r\n                        </mdb-card-title> \r\n                        <mdb-card-title>\r\n                            <h4>{{ user.password }}</h4>\r\n                        </mdb-card-title>                   \r\n                    </mdb-card-body>\r\n                </mdb-card>\r\n            </div>\r\n            <div class=\"col-12\">\r\n                <mdb-card mdbWavesEffect>\r\n                    <mdb-card-body>\r\n                        <mat-icon>date_range</mat-icon>\r\n                        <mdb-card-title>\r\n                            <p>Última atualização</p>\r\n                        </mdb-card-title>\r\n                        <mdb-card-title>\r\n                            <h4>{{ user.updated | date: 'dd/MM/yyyy' }}</h4>\r\n                        </mdb-card-title>                   \r\n                    </mdb-card-body>\r\n                </mdb-card>\r\n            </div>\r\n            <div class=\"col-12\">\r\n                <mdb-card class=\"aviso\" mdbWavesEffect>\r\n                    <mdb-card-body>\r\n                        <mat-icon>info</mat-icon>\r\n                        <mdb-card-title>\r\n                            <h4>Atenção</h4>\r\n                        </mdb-card-title>  \r\n                        <mdb-card-title>\r\n                            <p>Evite a exposição das suas informações, não nos responsabilizamos por eventuais vazamentos de dados</p>\r\n                        </mdb-card-title>                 \r\n                    </mdb-card-body>\r\n                </mdb-card>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<app-footer></app-footer>\r\n\r\n<div mdbModal #modal=\"mdbModal\" class=\"modal fade modal-zindex\">\r\n    <div class=\"modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close pull-right btn-hide-modal\" (click)=\"modal.hide()\">\r\n                    <span>×</span>\r\n                </button>\r\n                <h4 class=\"modal-title w-100\">ATUALIZAR INFORMAÇÕES</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <form [formGroup]=\"form\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                            <mat-form-field class=\"input-width\" appearance=\"outline\">\r\n                                <mat-label>Nome</mat-label>\r\n                                <input formControlName=\"name\" matInput required>\r\n                                <mat-error>preencha o nome corretamente</mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                            <mat-form-field class=\"input-width\" appearance=\"outline\">\r\n                                <mat-label>Sobrenome</mat-label>\r\n                                <input formControlName=\"surname\" matInput required>\r\n                                <mat-error>preencha o sobrenome corretamente</mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col\">\r\n                            <mat-form-field class=\"input-width\" appearance=\"outline\">\r\n                                <mat-label>Email</mat-label>\r\n                                <input formControlName=\"email\" matInput required>\r\n                                <mat-error>preencha o email corretamente</mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col\">\r\n                            <mat-form-field class=\"input-width\" appearance=\"outline\">\r\n                                <mat-label>Whatzapp</mat-label>\r\n                                <input formControlName=\"whatzapp\" matInput required mask=\"(00) 00000-0000\">\r\n                                <mat-error>Preencha essa capo corretamente, ex: (00) 00000-000</mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                            <mat-form-field class=\"input-width\" appearance=\"outline\">\r\n                                <mat-label>Usuário</mat-label>\r\n                                <input formControlName=\"username\" matInput required>\r\n                                <mat-error>preencha o nome corretamente</mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                            <mat-form-field class=\"input-width\" appearance=\"outline\">\r\n                                <mat-label>Senha</mat-label>\r\n                                <input formControlName=\"password\" matInput required>\r\n                                <mat-error>preencha o sobrenome corretamente</mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div class=\"modal-footer\"> \r\n                <button type=\"button\" mdbBtn color=\"info\" class=\"relative waves-light z-depth-0\" [disabled]=\"!form.valid\" (click)=\"atualizar(form.value)\" mdbWavesEffect>ATUALIZAR</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, Input } from '@angular/core';\r\n\r\nimport { Treasury } from 'src/app/shared/models/treasury.entity';\r\n\r\n@Component({\r\n  selector: 'app-charts-treasury',\r\n  templateUrl: './charts-treasury.component.html',\r\n  styleUrls: ['./charts-treasury.component.scss']\r\n})\r\nexport class ChartsTreasuryComponent implements OnInit {\r\n\r\n  @Input('treasury') public treasury: Treasury = new Treasury();\r\n\r\n  public chartType: string = 'bar';\r\n  public chartDatasets: Array<any> = [\r\n    { data: []}\r\n  ];\r\n  public chartLabels: Array<any> = ['Receitas', 'Despesas', 'Faturamento', 'Montante inicial'];\r\n  public chartColors: Array<any> = [\r\n    {\r\n      backgroundColor: [\r\n        'rgb(51, 181, 229, .5)',\r\n        'rgb(255, 68, 68, .5)',\r\n        'rgb(255, 187, 51, .5)',\r\n        'rgb(43, 187, 173, .5)'\r\n      ]\r\n    }\r\n  ];\r\n  public chartOptions: any = {\r\n    responsive: true,\r\n    scales: \r\n    { \r\n      xAxes: [{\r\n        ticks: {\r\n          callback: function(value) {\r\n              return ``;\r\n          }\r\n        }\r\n      }], \r\n      yAxes: [{ \r\n        ticks: {\r\n          callback: function(value) {\r\n              return ``;\r\n          }\r\n        }\r\n      }] \r\n    },\r\n    tooltips: {\r\n      callbacks: {\r\n        label: function(tooltipItem) {\r\n          return `R$ ${tooltipItem.value}`;\r\n        }\r\n      }\r\n    },\r\n    plugins: {\r\n      datalabels: {\r\n          display: false,\r\n      }\r\n    }\r\n  };\r\n\r\n  public constructor() { }\r\n\r\n  private feedChart() {\r\n    this.chartDatasets[0].data.push(this.treasury.incomeRecipes);\r\n    this.chartDatasets[0].data.push(this.treasury.incomeExpenses);\r\n    this.chartDatasets[0].data.push(this.treasury.currentBalance);\r\n    this.chartDatasets[0].data.push(this.treasury.initialAmount);\r\n    this.chartDatasets[0].data.push(0);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.feedChart();\r\n  }\r\n}","<canvas mdbChart\r\n    [chartType]=\"chartType\"\r\n    [datasets]=\"chartDatasets\"\r\n    [labels]=\"chartLabels\"\r\n    [colors]=\"chartColors\"\r\n    [options]=\"chartOptions\"\r\n    [legend]=\"false\"\r\n>\r\n</canvas>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nimport { HistoricService } from 'src/app/shared/services/historic.service';\r\n\r\n@Component({\r\n  selector: 'app-historic',\r\n  templateUrl: './historic.component.html',\r\n  styleUrls: ['./historic.component.scss']\r\n})\r\nexport class HistoricComponent implements OnInit {\r\n\r\n  public historic = {};\r\n  public loading = true;\r\n  public years = [ 2019, 2020, 2021, 2022 ];\r\n  public yearSelected = new Date().getFullYear();\r\n\r\n  public chartType: string = 'bar';\r\n \r\n  public transactions = [\r\n    { data: [], label: 'RECEITAS' },\r\n    { data: [], label: 'DESPESAS' }\r\n  ];\r\n\r\n  public billing = [\r\n    { data: [], label: 'FATURAMENTO ACUMULADO' },\r\n    { data: [], label: 'FATURAMENTO MENSAL' }\r\n  ];\r\n\r\n  public inventories = [\r\n    { data: [], label: 'SALDO ATUAL' },\r\n    { data: [], label: 'SALDO REAL' },\r\n    { data: [], label: 'DEFASAGEM' }\r\n  ];\r\n\r\n  public chartLabels = [\r\n    'Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho',\r\n    'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'\r\n  ];\r\n\r\n  public transactionsColors = [\r\n    {\r\n      backgroundColor: '#33b5e5'\r\n    },\r\n    {\r\n      backgroundColor: '#ff4444'\r\n    }\r\n  ];\r\n\r\n  public billingColors = [\r\n    {\r\n      backgroundColor: '#2BBBAD'\r\n    },\r\n    {\r\n      backgroundColor: '#ffbb33'\r\n    }\r\n  ];\r\n\r\n  public inventoriesColors = [\r\n    {\r\n      backgroundColor: '#4285F4'\r\n    },\r\n    {\r\n      backgroundColor: '#3F729B'\r\n    },\r\n    {\r\n      backgroundColor: '#0091ea'\r\n    }\r\n  ];\r\n\r\n  public chartOptions: any = {\r\n    responsive: true,\r\n    scales: \r\n    { \r\n      xAxes: [{}], \r\n      yAxes: [{ \r\n        ticks: {\r\n          callback: function(value) {\r\n              return `R$ ${value}`;\r\n          }\r\n      }\r\n    }] \r\n  },\r\n    plugins: {\r\n      datalabels: {\r\n        display: false,\r\n      }\r\n    },\r\n    tooltips: {\r\n      callbacks: {\r\n        label: function(tooltipItem) {\r\n          return `R$ ${tooltipItem.value}`;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  public constructor(\r\n                        private readonly router: Router, \r\n                        private readonly historicService: HistoricService, \r\n                        private readonly toastr: ToastrService\r\n                    ) \r\n  { \r\n    this.feedChart();\r\n  }\r\n\r\n  public feedChart() {\r\n    let id = parseInt(this.router.url.split('/')[2]);\r\n\r\n    this.chartLabels = [\r\n      'Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho',\r\n      'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'\r\n    ];\r\n\r\n    this.loading = true;\r\n    this.historicService.getHistoric(id, this.yearSelected).subscribe( response => {\r\n      this.historic = response.body;\r\n      this.populate(this.historic);\r\n\r\n    }, error => {\r\n      this.errorMessage(error);\r\n    }).add( () => {\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  private populate(body: any) {\r\n    this.transactions = [\r\n      { data: [], label: 'RECEITAS' },\r\n      { data: [], label: 'DESPESAS' }\r\n    ];\r\n\r\n    this.billing = [\r\n      { data: [], label: 'FATURAMENTO ACUMULADO' },\r\n      { data: [], label: 'FATURAMENTO MENSAL' }\r\n    ];\r\n\r\n    this.inventories = [\r\n      { data: [], label: 'SALDO ATUAL' },\r\n      { data: [], label: 'SALDO REAL' },\r\n      { data: [], label: 'DEFASAGEM' }\r\n    ];\r\n\r\n    const incomes = body.incomeYearly;\r\n  \r\n    incomes.forEach(income => {\r\n      this.transactions [0].data.push(income.incomeRecipes);\r\n      this.transactions [1].data.push(income.incomeExpenses);\r\n    });\r\n\r\n    const history = body.historyYearly;\r\n\r\n    history.forEach( item => {\r\n      this.billing[0].data.push(item.cumulativeBilling);\r\n      this.billing[1].data.push(item.monthlyBiiling);\r\n    });\r\n\r\n    const inventoryYearly = body.historicInventoriesYearly;\r\n\r\n    inventoryYearly.forEach( inventory => {\r\n      this.inventories[0].data.push(inventory.currentBalance);\r\n      this.inventories[1].data.push(inventory.actualBalance);\r\n      this.inventories[2].data.push(inventory.discrepancy);\r\n    })\r\n  }\r\n\r\n  private errorMessage(err: any) {\r\n    if(err.status == 0) {\r\n      this.toastr.error('Servidor Inacessível', 'ERRO', { progressBar: true });\r\n    }\r\n\r\n    else if(err.status == 401) {\r\n      this.router.navigateByUrl('/login');\r\n      this.toastr.error('Necessário autenticação', 'ERRO', { progressBar: true });\r\n      localStorage.removeItem('id_token');\r\n      localStorage.removeItem('user_id');\r\n    }\r\n    else {\r\n      this.toastr.error(err.error.details, 'ERRO', { progressBar: true });\r\n      this.router.navigateByUrl('/home');\r\n    }\r\n  }\r\n                  \r\n  ngOnInit() {}\r\n}","<app-menu></app-menu>\r\n<div class=\"body body-background\">\r\n    <div class=\"hero hero-background\">\r\n        <div class=\"row header-page\">\r\n            <div class=\"col-sm-6 col-md-8 col-lg-9 col-xl-10\">\r\n                <div class=\"name-page\">\r\n                    <mat-icon>batch_prediction</mat-icon>\r\n                    <h2>Histórico</h2>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-sm-6 col-md-4 col-lg-3 col-xl-2\">\r\n                <button type=\"button\" mdbBtn color=\"light\" block=\"true\" class=\"z-depth-0\" (click)=\"feedChart()\" mdbWavesEffect>ATUALIZAR</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"graphic z-depth-1-half\">\r\n        <div *ngIf=\"loading\">\r\n            <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\r\n        </div>\r\n        <app-income></app-income>\r\n        <div class=\"main-content\">\r\n            <mat-accordion>\r\n                <mat-expansion-panel>\r\n                    <mat-expansion-panel-header mdbWavesEffect>\r\n                        <mat-panel-description>Escolha um ano de referência</mat-panel-description>\r\n                    </mat-expansion-panel-header>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                            <mat-form-field>\r\n                                <mat-label>Ano</mat-label>\r\n                                <mat-select [(value)]=\"yearSelected\" (selectionChange)=\"feedChart()\">\r\n                                    <mat-option *ngFor=\"let year of years\" [value]=\"year\">{{ year }}</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                </mat-expansion-panel>\r\n            </mat-accordion>\r\n            <div class=\"row transacoes\">\r\n                <div class=\"col-12\">\r\n                    <h5>Histórico de transações de {{ yearSelected }}</h5>\r\n                    <div mdbWavesEffect>\r\n                        <canvas mdbChart\r\n                            [chartType]=\"chartType\"\r\n                            [(datasets)]=\"transactions\"\r\n                            [labels]=\"chartLabels\"\r\n                            [colors]=\"transactionsColors\"\r\n                            [options]=\"chartOptions\"\r\n                            [legend]=\"true\"\r\n                        >\r\n                        </canvas>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row transacoes\">\r\n                <div class=\"col-12\">\r\n                    <h5>Histórico de faturamento de {{ yearSelected }}</h5>\r\n                    <div mdbWavesEffect>\r\n                        <canvas mdbChart\r\n                            [chartType]=\"chartType\"\r\n                            [(datasets)]=\"billing\"\r\n                            [labels]=\"chartLabels\"\r\n                            [colors]=\"billingColors\"\r\n                            [options]=\"chartOptions\"\r\n                            [legend]=\"true\"\r\n                        >\r\n                        </canvas>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row transacoes\">\r\n                <div class=\"col-12\">\r\n                    <h5>Histórico de inventário de {{ yearSelected }}</h5>\r\n                    <div mdbWavesEffect>\r\n                        <canvas mdbChart\r\n                            [chartType]=\"chartType\"\r\n                            [(datasets)]=\"inventories\"\r\n                            [labels]=\"chartLabels\"\r\n                            [colors]=\"inventoriesColors\"\r\n                            [options]=\"chartOptions\"\r\n                            [legend]=\"true\"\r\n                        >\r\n                        </canvas>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"mobile body-background\">\r\n    <div class=\"hero hero-background\">\r\n        <div class=\"header-page\">\r\n            <div class=\"name-page\">\r\n                <mat-icon>batch_prediction</mat-icon>\r\n                <h2>Histórico</h2>\r\n            </div>\r\n            <button type=\"button\" mdbBtn color=\"light\" block=\"true\" class=\"z-depth-0\" mdbWavesEffect (click)=\"feedChart()\">ATUALIZAR</button>\r\n        </div>\r\n    </div>\r\n    <br>\r\n    <div class=\"history\">\r\n        <div *ngIf=\"loading\">\r\n            <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\r\n        </div>\r\n        <app-income></app-income>\r\n        <div class=\"main-content\">\r\n            <mat-accordion>\r\n                <mat-expansion-panel>\r\n                    <mat-expansion-panel-header mdbWavesEffect>\r\n                        <mat-panel-description>Escolha um ano de referência</mat-panel-description>\r\n                    </mat-expansion-panel-header>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                            <mat-form-field>\r\n                                <mat-label>Ano</mat-label>\r\n                                <mat-select [(value)]=\"yearSelected\" (selectionChange)=\"feedChart()\">\r\n                                    <mat-option *ngFor=\"let year of years\" [value]=\"year\">{{ year }}</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                </mat-expansion-panel>\r\n            </mat-accordion>\r\n\r\n            <div class=\"row rendimentos\">\r\n                <div class=\"col-12\">\r\n                    <p class=\"text-center\">Histórico de rendimentos de {{ yearSelected }}</p>\r\n                </div>\r\n                <div class=\"col-12\">\r\n                    <mdb-card mdbWavesEffect>\r\n                        <mdb-card-body>\r\n                            <div>\r\n                                <canvas mdbChart\r\n                                    [chartType]=\"chartType\"\r\n                                    [(datasets)]=\"transactions\"\r\n                                    [labels]=\"chartLabels\"\r\n                                    [colors]=\"transactionsColors\"\r\n                                    [options]=\"chartOptions\"\r\n                                    [legend]=\"true\"\r\n                                >\r\n                                </canvas>\r\n                            </div>     \r\n                        </mdb-card-body>\r\n                    </mdb-card> \r\n                </div>\r\n            </div>\r\n        \r\n            <div class=\"row receitas\">\r\n                <div class=\"col-12\">\r\n                    <p class=\"text-center\">Histórico de geral de faturamento de {{ yearSelected }}</p>  \r\n                </div>\r\n                <div class=\"col-12\">\r\n                    <mdb-card mdbWavesEffect>\r\n                        <mdb-card-body>\r\n                            <div>\r\n                                <canvas mdbChart\r\n                                    [chartType]=\"chartType\"\r\n                                    [(datasets)]=\"billing\"\r\n                                    [labels]=\"chartLabels\"\r\n                                    [colors]=\"billingColors\"\r\n                                    [options]=\"chartOptions\"\r\n                                    [legend]=\"true\"\r\n                                >\r\n                        </canvas>\r\n                            </div>     \r\n                        </mdb-card-body>\r\n                    </mdb-card>   \r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<app-footer></app-footer>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Income } from 'src/app/shared/models/income.entity';\r\nimport { TreasuryService } from 'src/app/shared/services/treasury.service';\r\n\r\n@Component({\r\n  selector: 'app-income',\r\n  templateUrl: './income.component.html',\r\n  styleUrls: ['./income.component.scss']\r\n})\r\nexport class IncomeComponent implements OnInit {\r\n\r\n  public income = new Income();\r\n\r\n  public constructor(private readonly router: Router, private readonly tresuryService: TreasuryService) {}\r\n\r\n  public load() {\r\n   const treasuryId = parseInt(this.router.url.split('/')[2]);\r\n   this.tresuryService.getResume(treasuryId).subscribe( response => {\r\n    this.income = response;\r\n   }, err =>{\r\n      console.log('Ocorreu um de carregamento de dados');\r\n   });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.load();\r\n  }\r\n}","<div class=\"income\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-6 col-md-6 col-lg-3 col-xl-3\">\r\n            <mdb-card class=\"default-color text-white z-depth-0\" mdbWavesEffect>\r\n                <mdb-card-body>\r\n                    <mat-icon>attach_money</mat-icon>\r\n                    <mdb-card-text>\r\n                        <p class=\"text-white label\">Montante inicial</p>\r\n                    </mdb-card-text>\r\n                    <mdb-card-title>\r\n                        <h4 class=\"money\">{{ income.initialAmount | currency:'BRL' }}</h4>\r\n                    </mdb-card-title>                   \r\n                </mdb-card-body>\r\n            </mdb-card>\r\n        </div>\r\n        <div class=\"col-sm-6 col-md-6 col-lg-3 col-xl-3\">\r\n            <mdb-card class=\"warning-color text-white z-depth-0\" mdbWavesEffect>\r\n                <mdb-card-body>\r\n                    <mat-icon>attach_money</mat-icon>\r\n                    <mdb-card-text>\r\n                        <p class=\"text-white label\">Saldo atual</p>\r\n                    </mdb-card-text>\r\n                    <mdb-card-title>\r\n                        <h4 class=\"money\">{{ income.currentBalance | currency:'BRL' }}</h4>\r\n                    </mdb-card-title>                   \r\n                </mdb-card-body>\r\n            </mdb-card>\r\n        </div>\r\n        <div class=\"col-sm-6 col-md-6 col-lg-3 col-xl-3\">\r\n            <mdb-card class=\"info-color text-white z-depth-0\" mdbWavesEffect>\r\n                <mdb-card-body>\r\n                    <mat-icon>attach_money</mat-icon>\r\n                    <mdb-card-text>\r\n                        <p class=\"text-white label\">Total de receitas</p>\r\n                    </mdb-card-text>\r\n                    <mdb-card-title>\r\n                        <h4 class=\"money\">{{ income.incomeRecipes | currency:'BRL' }}</h4>\r\n                    </mdb-card-title>                   \r\n                </mdb-card-body>\r\n            </mdb-card>\r\n        </div>\r\n        <div class=\"col-sm-6 col-md-6 col-lg-3 col-xl-3\">\r\n            <mdb-card class=\"danger-color text-white z-depth-0\" mdbWavesEffect>\r\n                <mdb-card-body>\r\n                    <mat-icon>attach_money</mat-icon>\r\n                    <mdb-card-text>\r\n                        <p class=\"text-white label\">Total de despesas</p>\r\n                    </mdb-card-text>\r\n                    <mdb-card-title>\r\n                        <h4 class=\"money\">{{ income.incomeExpenses | currency:'BRL' }}</h4>\r\n                    </mdb-card-title>                   \r\n                </mdb-card-body>\r\n            </mdb-card>\r\n        </div>\r\n    </div>\r\n</div>","import { Injectable, EventEmitter } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class IncomeService {\r\n\r\n    public emitterIncome = new EventEmitter<any>();\r\n\r\n    public constructor() {\r\n        this.emitterIncome.emit();\r\n    }\r\n\r\n    public loader(initialAmount: number, currentBalance: number, incomeRecipes: number, incomeExpenses: number) {\r\n        this.emitterIncome.emit({ initialAmount, currentBalance, incomeRecipes, incomeExpenses });\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\nimport * as moment from 'moment';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nimport { Inventory } from 'src/app/shared/models/inventory.entity';\r\nimport { DateValidator } from 'src/app/shared/validators/date.validator';\r\nimport { InventoryService } from 'src/app/shared/services/inventory.service';\r\n\r\n@Component({\r\n  selector: 'app-inventory',\r\n  templateUrl: './inventory.component.html',\r\n  styleUrls: ['./inventory.component.scss']\r\n})\r\nexport class InventoryComponent implements OnInit {\r\n\r\n  public f: FormGroup;\r\n\r\n  public rows: Inventory[] = [];\r\n  public treasuryId: number = 0;\r\n\r\n  public loading = true;\r\n  public inventoriesSelected: any = [];\r\n  public dateValidator = new DateValidator();\r\n\r\n  constructor(\r\n                private readonly router: Router, \r\n                private readonly _fb: FormBuilder, \r\n                private readonly toastr: ToastrService,\r\n                private readonly service: InventoryService\r\n            ) \r\n  {\r\n    this.treasuryId = parseInt(this.router.url.split('/')[2]);\r\n    this.load();\r\n  }\r\n\r\n  public whenSelecting(rows: any) { this.inventoriesSelected = rows.selected }\r\n\r\n  public load() {\r\n    this.service.findAll(this.treasuryId).subscribe( response => {\r\n      this.rows = response;\r\n      this.loading = false;\r\n    }, e => {\r\n      this.errorMessage(e);\r\n    })\r\n  }\r\n\r\n  public errorMessage(err: any) {\r\n    if(err.status == 0) {\r\n      this.toastr.error('Servidor Inacessível', 'ERRO', { progressBar: true });\r\n    }\r\n\r\n    else if(err.status == 401) {\r\n      this.router.navigateByUrl('/login');\r\n      this.toastr.info('Necessário autenticação', 'Sessão expirada', { progressBar: true });\r\n      localStorage.removeItem('id_token');\r\n      localStorage.removeItem('user_id');\r\n    }\r\n\r\n    else {\r\n      this.toastr.error(err.error.details, 'ERRO', { progressBar: true });\r\n      this.router.navigateByUrl('/home');\r\n    }\r\n  }\r\n\r\n  public saveOrUpdateInventory(inventory: Inventory, modal: any) {\r\n    const newInventory = new Inventory({\r\n      id: inventory.id,\r\n      actualBalance: inventory.actualBalance,\r\n      currentBalance: inventory.currentBalance,\r\n      discrepancy: inventory.actualBalance - inventory.currentBalance,\r\n      registeredIn: moment(inventory.registeredIn, 'DDMMYYYY', true).toDate()\r\n    });\r\n\r\n    if(!newInventory.id) {\r\n      this.service.save(newInventory, this.treasuryId).subscribe( res => {\r\n        this.toastr.success('Cadastrado com sucesso', 'Tudo ok!', { progressBar: true });\r\n        this.load();\r\n      }, err => {\r\n        this.errorMessage(err);\r\n      });\r\n    }\r\n    else {\r\n      this.service.update(newInventory, this.treasuryId).subscribe( res => {\r\n        this.toastr.success('Atalizado com sucesso', 'Tudo ok!', { progressBar: true });\r\n        this.load();\r\n      }, err => {\r\n        this.errorMessage(err);\r\n      });\r\n    }\r\n    modal.hide();\r\n  }\r\n\r\n  public deleteInventoriesSelected() {\r\n    Swal.fire({\r\n      title: 'Tem certeza que deseja remover?',\r\n      text: 'Você não poderá desfazer essa operação',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Sim',\r\n      cancelButtonText: 'Não'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.inventoriesSelected.forEach(inventory => {\r\n          this.service.delete(inventory.id, this.treasuryId).subscribe(res => {\r\n            this.load();\r\n            this.toastr.success('Removido com sucesso', 'Tudo ok!', { progressBar: true });\r\n          }, err => {\r\n            this.errorMessage(err);\r\n          }); \r\n        });\r\n        this.inventoriesSelected = [];\r\n      } \r\n    });\r\n  }\r\n\r\n  public deleteInventory(inventory: any) {\r\n    Swal.fire({\r\n      title: 'Tem certeza que deseja remover?',\r\n      text: 'Você não poderá desfazer essa operação',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Sim',\r\n      cancelButtonText: 'Não'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.service.delete(inventory.id, this.treasuryId).subscribe( res => {\r\n          this.toastr.success('Removido com sucesso', 'Tudo ok!', { progressBar: true });\r\n          this.load();\r\n        }, err => {\r\n          this.errorMessage(err);\r\n        });\r\n        this.inventoriesSelected = [];\r\n      } \r\n    });\r\n  }\r\n\r\n  public showModalUpdate(row: any, modal: any) {\r\n    modal.show();\r\n    this.f.patchValue({\r\n      id: row.id,\r\n      actualBalance: row.actualBalance,\r\n      currentBalance: row.currentBalance,\r\n      discrepancy: row.discrepancy,\r\n      registeredIn: moment(row.registeredIn).format('DDMMYYYY')\r\n    });\r\n  }\r\n\r\n  public showModalCreate(modal: any) {\r\n    this.f.reset();\r\n    this.f.patchValue({\r\n      registeredIn: moment().format('DDMMYYYY'),\r\n    });\r\n    modal.show();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.f = this._fb.group({\r\n      id: [null],\r\n      actualBalance: ['', Validators.required],\r\n      currentBalance: ['', Validators.required],\r\n      discrepancy: [0],\r\n      registeredIn: [moment().format('DDMMYYYY'), [Validators.required, this.dateValidator.validate()]],\r\n    });\r\n  }\r\n}","<app-menu></app-menu>\r\n<div class=\"body body-background\">\r\n    <div class=\"hero hero-background\">\r\n        <div class=\"row header-page\">\r\n            <div class=\"col-sm-6 col-md-8 col-lg-9 col-xl-10\">\r\n                <div class=\"name-page\">\r\n                    <mat-icon>style</mat-icon>\r\n                    <h2>Inventário</h2>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-sm-6 col-md-4 col-lg-3 col-xl-2\">\r\n                <button type=\"button\" mdbBtn color=\"light\" block=\"true\" class=\"z-depth-0\" (click)=\"showModalCreate(modalCreate)\" mdbWavesEffect>NOVO INVENTÁRIO</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"score z-depth-1-half\">\r\n        <div class=\"header\">\r\n            <app-income></app-income>\r\n            <div class=\"all-delete\">\r\n                <div class=\"alert alert-warning\" role=\"alert\" *ngIf=\"inventoriesSelected.length > 1\">\r\n                    {{ inventoriesSelected.length }} selecionado(s) ...\r\n                    <button (click)=\"deleteInventoriesSelected()\" mat-icon-button>\r\n                        <mat-icon>delete</mat-icon>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"main\">\r\n            <ngx-datatable\r\n                [rows]=\"rows\"\r\n                class=\"material\"\r\n                [loadingIndicator]=\"loading\"\r\n                [columnMode]=\"'force'\"\r\n                [headerHeight]=\"50\"\r\n                [footerHeight]=\"50\"\r\n                [rowHeight]=\"'auto'\"\r\n                [messages]=\"{emptyMessage: '<center>Nenhuma contagem cadastrada</center>', totalMessage: 'total', selectedMessage: 'selecionado'}\"\r\n                [selectionType]=\"'checkbox'\"\r\n                (select)=\"whenSelecting($event)\"\r\n                [selected]=\"inventoriesSelected\"\r\n                [limit]=\"6\"\r\n            >\r\n            <ngx-datatable-column\r\n                [width]=\"60\"\r\n                [sortable]=\"false\"\r\n                [canAutoResize]=\"false\"\r\n                [draggable]=\"false\"\r\n                [resizeable]=\"false\"\r\n                [headerCheckboxable]=\"true\"\r\n                [checkboxable]=\"true\">\r\n            </ngx-datatable-column>\r\n                <ngx-datatable-column name=\"ID\" [width]=\"10\" prop=\"id\"></ngx-datatable-column>\r\n                <ngx-datatable-column name=\"Saldo atual\" [width]=\"100\">\r\n                    <ng-template let-row=\"row\" ngx-datatable-cell-template>{{ row.currentBalance | currency:'BRL'  }}</ng-template>\r\n                </ngx-datatable-column>\r\n                <ngx-datatable-column name=\"Saldo real\" [width]=\"100\">\r\n                    <ng-template let-row=\"row\" ngx-datatable-cell-template>{{ row.actualBalance | currency:'BRL' }}</ng-template>\r\n                </ngx-datatable-column>\r\n                <ngx-datatable-column name=\"Registrado em\" [width]=\"100\">\r\n                    <ng-template let-row=\"row\" ngx-datatable-cell-template>{{ row.registeredIn | date: 'dd/MM/yyyy' }}</ng-template>\r\n                </ngx-datatable-column>\r\n                <ngx-datatable-column name=\"Ações\" [width]=\"100\">\r\n                    <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\r\n                        <button class=\"button-actions\" (click)=\"showModalUpdate(row, modalUpdate)\" mat-icon-button>\r\n                            <mat-icon>edit</mat-icon>\r\n                        </button>\r\n                        <button class=\"button-actions\" (click)=\"deleteInventory(row)\" mat-icon-button>\r\n                            <mat-icon>delete</mat-icon>\r\n                        </button>\r\n                    </ng-template>\r\n                </ngx-datatable-column>\r\n            </ngx-datatable>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"mobile body-background\">\r\n    <div class=\"hero hero-background\">\r\n        <div class=\"header-page\">\r\n            <div class=\"name-page\">\r\n                <div class=\"name-page\">\r\n                    <mat-icon>style</mat-icon>\r\n                    <h2>Inventário</h2>\r\n                </div>\r\n            </div>\r\n            <button type=\"button\" mdbBtn color=\"light\" class=\"z-depth-0\" (click)=\"showModalCreate(modalCreate)\" mdbWavesEffect>NOVO INVENTÁRIO</button>\r\n        </div>\r\n    </div>\r\n    <div class=\"score\">\r\n        <app-income></app-income>\r\n        <ngx-datatable\r\n            [rows]=\"rows\"\r\n            class=\"material z-depth-0\"\r\n            [loadingIndicator]=\"loading\"\r\n            [columnMode]=\"'force'\"\r\n            [headerHeight]=\"50\"\r\n            [footerHeight]=\"50\"\r\n            [rowHeight]=\"50\"\r\n            [messages]=\"{emptyMessage: '<center>Nenhuma movimentação cadastrada</center>' }\"\r\n            [limit]=\"6\"\r\n        >\r\n            <ngx-datatable-column name=\"ID\" [width]=\"100\" prop=\"id\"></ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Saldo atual\" [width]=\"200\">\r\n                <ng-template let-row=\"row\" ngx-datatable-cell-template>{{ row.currentBalance | currency:'BRL' }}</ng-template>\r\n            </ngx-datatable-column>  \r\n            <ngx-datatable-column name=\"Saldo real\" [width]=\"100\" prop=\"actualBalance\">\r\n                <ng-template let-column=\"column\" let-sort=\"sortFn\" ngx-datatable-header-template>\r\n                    <span class=\"mobile-hidden\">{{ column.name }}</span>\r\n                  </ng-template>\r\n                  <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n                    <span class=\"mobile-hidden\">{{ value | currency:'BRL' }}</span>\r\n                  </ng-template>\r\n            </ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Ações\" [width]=\"100\">\r\n                <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                    <button class=\"btn-more\" [matMenuTriggerFor]=\"actions\"  mat-icon-button>\r\n                        <mat-icon>more_vert</mat-icon>\r\n                    </button>\r\n                    <mat-menu #actions=\"matMenu\">\r\n                        <button style=\"outline: none;\" mat-menu-item (click)=\"showModalUpdate(row, modalUpdate)\">\r\n                            <mat-icon>edit</mat-icon>Editar\r\n                        </button>\r\n                        <button mat-menu-item (click)=\"deleteInventory(row)\">\r\n                            <mat-icon>delete</mat-icon>Deletar\r\n                        </button>\r\n                    </mat-menu> \r\n                </ng-template>\r\n            </ngx-datatable-column>\r\n        </ngx-datatable>\r\n    </div>\r\n</div>\r\n<app-footer></app-footer>\r\n\r\n<div mdbModal #modalCreate=\"mdbModal\" class=\"modal fade modal-zindex\">\r\n    <div class=\"modal-dialog modal-sm modal-dialog-centered\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close pull-right btn-hide-modal\" (click)=\"modalCreate.hide()\">\r\n                <span>×</span>\r\n                </button>\r\n                <h4 class=\"modal-title w-100\">NOVO INVENTÁRIO</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <form [formGroup]=\"f\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-6\">\r\n                            <mat-form-field  class=\"input-width\">\r\n                                <input matInput placeholder=\"Saldo atual\" formControlName=\"currentBalance\" currencyMask [options]=\"{ prefix: 'R$ ', thousands: '.', decimal: ',' }\" required>\r\n                                <mat-error>o saldo atual é obrigatório</mat-error>\r\n                            </mat-form-field> \r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <mat-form-field  class=\"input-width\">\r\n                                <input matInput placeholder=\"Saldo real\" formControlName=\"actualBalance\" currencyMask [options]=\"{ prefix: 'R$ ', thousands: '.', decimal: ',' }\" required>\r\n                                <mat-error>o saldo real é obrigatório</mat-error>\r\n                            </mat-form-field> \r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col\">\r\n                            <mat-form-field  class=\"input-width\">\r\n                                <input matInput placeholder=\"Registrado em\" formControlName=\"registeredIn\" mask=\"00/00/0000\" required>\r\n                                <mat-error>A data de registro deve ser válida</mat-error>\r\n                            </mat-form-field> \r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div class=\"modal-footer\"> \r\n                <button type=\"button\" mdbBtn color=\"indigo\" block=\"true\" class=\"relative waves-light z-depth-0\" [disabled]=\"!f.valid\" (click)=\"saveOrUpdateInventory(f.value, modalCreate)\" mdbWavesEffect>SALVAR</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div mdbModal #modalUpdate=\"mdbModal\" class=\"modal fade modal-zindex\">\r\n    <div class=\"modal-dialog modal-sm modal-dialog-centered\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close pull-right btn-hide-modal\" (click)=\"modalUpdate.hide()\">\r\n                <span>×</span>\r\n                </button>\r\n                <h4 class=\"modal-title w-100\">EDITAR INVENTÁRIO</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <form [formGroup]=\"f\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-6\">\r\n                            <mat-form-field  class=\"input-width\">\r\n                                <input matInput placeholder=\"Saldo atual\" formControlName=\"currentBalance\" currencyMask [options]=\"{ prefix: 'R$ ', thousands: '.', decimal: ',' }\" required>\r\n                                <mat-error>o saldo atual é obrigatório</mat-error>\r\n                            </mat-form-field> \r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <mat-form-field  class=\"input-width\">\r\n                                <input matInput placeholder=\"Saldo real\" formControlName=\"actualBalance\" currencyMask [options]=\"{ prefix: 'R$ ', thousands: '.', decimal: ',' }\" required>\r\n                                <mat-error>O saldo real é obrigatório</mat-error>\r\n                            </mat-form-field> \r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col\">\r\n                            <mat-form-field  class=\"input-width\">\r\n                                <input matInput placeholder=\"Discrepância\" formControlName=\"discrepancy\" currencyMask [options]=\"{ prefix: 'R$ ', thousands: '.', decimal: ',' }\" readonly>\r\n                            </mat-form-field> \r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col\">\r\n                            <mat-form-field  class=\"input-width\">\r\n                                <input matInput placeholder=\"Registrado em\" formControlName=\"registeredIn\" mask=\"00/00/0000\" required>\r\n                                <mat-error>A data de registro deve ser válida</mat-error>\r\n                            </mat-form-field> \r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div class=\"modal-footer\"> \r\n                <button type=\"button\" mdbBtn color=\"indigo\" block=\"true\" class=\"relative waves-light z-depth-0\" [disabled]=\"!f.valid\" (click)=\"saveOrUpdateInventory(f.value, modalUpdate)\" mdbWavesEffect>ATUALIZAR</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport * as moment from 'moment';\r\n\r\nimport { Income } from 'src/app/shared/models/income.entity';\r\nimport { Report } from 'src/app/shared/models/report.entity';\r\nimport { ReportService } from 'src/app/shared/services/report.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-report',\r\n  templateUrl: './report.component.html',\r\n  styleUrls: ['./report.component.scss']\r\n})\r\nexport class ReportComponent implements OnInit, OnDestroy {\r\n\r\n  public report = new Report();\r\n  public annualReport: Report[] = [];\r\n  public income = new Income();\r\n  public loading = true;\r\n  public subscriptions: Subscription[] = [];\r\n\r\n  public months = [\r\n    'Janeiro',\r\n    'Fevereiro',\r\n    'Março',\r\n    'Abril', \r\n    'Maio',\r\n    'Junho',\r\n    'Julho',\r\n    'Agosto',\r\n    'Setembro',\r\n    'Outubro', \r\n    'Novembro',\r\n    'Dezembro',\r\n    \"Todos os meses\"\r\n  ];\r\n\r\n  public years = [ 2020, 2021, 2022 ];\r\n  public monthSelected = 'Janeiro';\r\n  public yearSelected = 2020;\r\n\r\n  public chartType: string = 'bar';\r\n\r\n  public recipes = [\r\n    { data: [], label: 'RECEITAS' }\r\n  ];\r\n\r\n  public expenses = [\r\n    { data: [], label: 'DESPESAS' }\r\n  ]\r\n\r\n  public labelsRecipes = [];\r\n  public labelsExpenses = [];\r\n\r\n  public colorsRecipes = [\r\n    {\r\n      backgroundColor: 'rgb(51, 181, 229, .9)'\r\n    }\r\n  ];\r\n\r\n  public colorsExpenses = [\r\n    {\r\n      backgroundColor: 'rgb(255, 68, 68, .9)'\r\n    }\r\n  ]\r\n\r\n  public chartOptions: any = {\r\n    responsive: true,\r\n    scales: \r\n    { \r\n      xAxes: [{\r\n        ticks: {\r\n          callback: function(value) {\r\n              return ``;\r\n          }\r\n        }\r\n      }], \r\n      yAxes: [{ \r\n        ticks: {\r\n          callback: function(value) {\r\n              return `R$ ${value}`;\r\n          }\r\n        }\r\n      }] \r\n    },\r\n    tooltips: {\r\n      callbacks: {\r\n        label: function(tooltipItem) {\r\n          return `R$ ${tooltipItem.value}`;\r\n        }\r\n      }\r\n    },\r\n    plugins: {\r\n      datalabels: {\r\n          display: false,\r\n      }\r\n    }\r\n  };\r\n\r\n  public constructor(\r\n                        private service: ReportService,\r\n                        private router: Router,\r\n                        private toastr: ToastrService\r\n                    ) \r\n  { \r\n    this.getReport();\r\n  }\r\n \r\n  public getReport() {\r\n    let id = parseInt(this.router.url.split('/')[2]);\r\n    let month = this.months.indexOf(this.monthSelected);\r\n    this.loading = true;\r\n    this.subscriptions.push(this.service.getReport(id, this.yearSelected, month).subscribe( response => { \r\n      if(!Array.isArray(response.body)) {\r\n        this.report = response.body;\r\n        this.annualReport = [];\r\n      }\r\n      else {\r\n        this.annualReport = response.body;\r\n        this.report = new Report();\r\n      }\r\n      this.feedChart();\r\n    }, error => {\r\n      this.errorMessage(error);\r\n    }).add( () => {\r\n      this.loading = false;\r\n    }));\r\n  }\r\n\r\n  private feedChart() {\r\n    this.recipes = [\r\n      { data: [], label: 'RECEITAS' }\r\n      \r\n    ];\r\n\r\n    this.expenses = [\r\n      { data: [], label: 'DESPESAS' }\r\n    ]\r\n\r\n    this.labelsRecipes = [];\r\n    this.labelsExpenses = [];\r\n\r\n    this.report.recipes.forEach( recipe => {\r\n      this.recipes[0].data.push(recipe.value);\r\n      this.labelsRecipes.push(moment(recipe.registeredIn).format('DD/MM/YYYY'));\r\n    });\r\n\r\n    this.report.expenses.forEach( expense => {\r\n      this.expenses[0].data.push(expense.value);\r\n      this.labelsExpenses.push(moment(expense.registeredIn).format('DD/MM/YYYY'));\r\n    });\r\n\r\n    this.expenses[0].data.push(0);\r\n    this.labelsExpenses.push('');\r\n\r\n    this.recipes[0].data.push(0);\r\n    this.labelsRecipes.push('');\r\n  }\r\n\r\n  public download() {\r\n    let id = parseInt(this.router.url.split('/')[2]);\r\n    let month = this.months.indexOf(this.monthSelected);\r\n    this.loading = true;\r\n    this.subscriptions.push(this.service.downloadReport(id, this.yearSelected, month).subscribe( res => {\r\n      const newWin = open();\r\n      newWin.document.write(res.body);\r\n    }, error => {\r\n      this.errorMessage(error);\r\n    }).add( () => {\r\n      this.loading = false;\r\n    }));\r\n  }\r\n  \r\n  private errorMessage(err: any) {\r\n    if(err.status == 0) {\r\n      this.toastr.error('Servidor Inacessível', 'ERRO', { progressBar: true });\r\n    }\r\n    \r\n    else if(err.status == 401) {\r\n      this.router.navigateByUrl('/login');\r\n      this.toastr.error('Necessário autenticação', 'Sessão expirada', { progressBar: true });\r\n      localStorage.removeItem('id_token');\r\n      localStorage.removeItem('user_id');\r\n    }\r\n    else {\r\n      this.toastr.error(err.error.details, 'ERRO', { progressBar: true });\r\n      this.router.navigateByUrl('/home');\r\n    }\r\n  }\r\n\r\n  ngOnInit() { }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.forEach( sub => {\r\n      sub.unsubscribe();\r\n    });\r\n  }\r\n}","<app-menu></app-menu>\r\n<div class=\"body body-background\">\r\n    <div class=\"hero hero-background\">\r\n        <div class=\"row header-page\">\r\n            <div class=\"col-sm-6 col-md-8 col-lg-10 col-xl-10\">\r\n                <div class=\"name-page\">\r\n                    <mat-icon>description</mat-icon>\r\n                    <h2>Relatório</h2>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-sm-6 col-md-4 col-lg-2 col-xl-2\">\r\n                <button type=\"button\" mdbBtn color=\"light\" block=\"true\" class=\"z-depth-0\" (click)=\"download()\" mdbWavesEffect>IMPRIMIR</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div id=\"report\" class=\"report z-depth-1-half\">\r\n        <div *ngIf=\"loading\">\r\n            <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\r\n        </div>\r\n        <app-income></app-income>     \r\n        <mat-accordion>\r\n            <mat-expansion-panel>\r\n                <mat-expansion-panel-header mdbWavesEffect>\r\n                    <mat-panel-description>Escolha um período de referência</mat-panel-description>\r\n                </mat-expansion-panel-header>\r\n                <div class=\"row\">\r\n                    <div class=\"col-6\">\r\n                        <mat-form-field>\r\n                            <mat-label>Mês</mat-label>\r\n                            <mat-select [(value)]=\"monthSelected\" (selectionChange)=\"getReport()\">\r\n                                <mat-option *ngFor=\"let month of months\" [value]=\"month\">{{ month }}</mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-6\">\r\n                        <mat-form-field>\r\n                            <mat-label>Ano</mat-label>\r\n                            <mat-select [(value)]=\"yearSelected\" (selectionChange)=\"getReport()\">\r\n                                <mat-option *ngFor=\"let year of years\" [value]=\"year\">{{ year }}</mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n            </mat-expansion-panel>\r\n        </mat-accordion>\r\n        <div class=\"main-content\" *ngIf=\"!annualReport[0]\">\r\n            <div class=\"row\">\r\n                <div class=\"col\">\r\n                    <mdb-card class=\"empty-data\" *ngIf=\"report.recipes.length == 0 && report.expenses.length == 0\" mdbWavesEffect>\r\n                        <mdb-card-body>\r\n                            <img src=\"/assets/img/folder-empty.png\" alt=\"empty\">\r\n                            <h4>Nenhuma registro encontrado</h4>\r\n                            <h5>Verifique o periodo solicitado</h5>      \r\n                        </mdb-card-body>\r\n                    </mdb-card>\r\n                </div>\r\n            </div>\r\n            <div *ngIf=\"report.recipes[0] != null || report.expenses[0] != null\">\r\n                <div class=\"row\">\r\n                    <div class=\"col\">\r\n                        <p style=\"margin-top: 10px;\">Rendimentos de {{ monthSelected}} de {{ yearSelected }}</p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-6\">\r\n                        <mdb-card class=\"z-depth-0\" mdbWavesEffect>\r\n                            <mdb-card-body>\r\n                                <canvas mdbChart\r\n                                    [chartType]=\"chartType\"\r\n                                    [(datasets)]=\"recipes\"\r\n                                    [labels]=\"labelsRecipes\"\r\n                                    [colors]=\"colorsRecipes\"\r\n                                    [options]=\"chartOptions\"\r\n                                    [legend]=\"false\"\r\n                                >\r\n                                </canvas>\r\n                            </mdb-card-body> \r\n                        </mdb-card>\r\n                    </div>\r\n                    <div class=\"col-6\">\r\n                        <mdb-card class=\"z-depth-0\" mdbWavesEffect>\r\n                            <mdb-card-body>\r\n                                <canvas mdbChart\r\n                                    [chartType]=\"chartType\"\r\n                                    [(datasets)]=\"expenses\"\r\n                                    [labels]=\"labelsExpenses\"\r\n                                    [colors]=\"colorsExpenses\"\r\n                                    [options]=\"chartOptions\"\r\n                                    [legend]=\"false\"\r\n                                >\r\n                                </canvas>\r\n                            </mdb-card-body> \r\n                        </mdb-card>\r\n                    </div>\r\n                </div>\r\n                <table>\r\n                    <tr>\r\n                        <th class=\"info-color\">RECEITAS</th>\r\n                        <th class=\"danger-color\">DESPESAS</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            <div class=\"box-moviment\" *ngFor=\"let recipe of report.recipes\">\r\n                                <mdb-card class=\"z-depth-0\" mdbWavesEffect>\r\n                                    <mdb-card-body>\r\n                                        <mdb-card-text>{{ recipe.description }}</mdb-card-text>\r\n                                        <mdb-card-title>\r\n                                            <h4 class=\"text-info\">{{ recipe.value | currency:'BRL' }}</h4>\r\n                                        </mdb-card-title>    \r\n                                        <mdb-card-text>{{ recipe.registeredIn | date: 'dd/MM/yyyy' }}</mdb-card-text>   \r\n                                        <mdb-card-text *ngIf=\"recipe.offerer != null\" >{{ recipe.offerer }}</mdb-card-text> \r\n                                        <mdb-card-text *ngIf=\"recipe.details != null\" >{{ recipe.details }}</mdb-card-text>            \r\n                                    </mdb-card-body>\r\n                                </mdb-card>\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            <div class=\"box-moviment\" *ngFor=\"let expense of report.expenses\">\r\n                                <mdb-card class=\"z-depth-0\" mdbWavesEffect>\r\n                                    <mdb-card-body>\r\n                                        <mdb-card-text>{{ expense.description }}</mdb-card-text>\r\n                                        <mdb-card-title>\r\n                                            <h4 class=\"text-danger\">{{ expense.value | currency:'BRL' }}</h4>\r\n                                        </mdb-card-title>    \r\n                                        <mdb-card-text>{{ expense.registeredIn | date: 'dd/MM/yyyy' }}</mdb-card-text>   \r\n                                        <mdb-card-text *ngIf=\"expense.details != null\" >{{ expense.details }}</mdb-card-text>             \r\n                                    </mdb-card-body>\r\n                                </mdb-card>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            <mdb-card class=\"indigo lighten-5 z-depth-0\" mdbWavesEffect>\r\n                                <mdb-card-body>\r\n                                    <mdb-card-text>Receitas mensais</mdb-card-text>\r\n                                    <mdb-card-title>\r\n                                        <h4>{{ report.incomeRecipesMonthly | currency:'BRL' }}</h4>\r\n                                    </mdb-card-title>                   \r\n                                </mdb-card-body>\r\n                            </mdb-card>\r\n                        </td>\r\n                        <td>\r\n                            <mdb-card class=\"indigo lighten-5 z-depth-0\" mdbWavesEffect>\r\n                                <mdb-card-body>\r\n                                    <mdb-card-text>Despesas mensais</mdb-card-text>\r\n                                    <mdb-card-title>\r\n                                        <h4>{{ report.incomeExpensesMonthly | currency:'BRL' }}</h4>\r\n                                    </mdb-card-title>                   \r\n                                </mdb-card-body>\r\n                            </mdb-card>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td colspan=\"2\">\r\n                            <mdb-card class=\"text-white z-depth-0\" [ngClass]=\"{ 'danger-color': report.balanceMonthly < 0, 'info-color': report.balanceMonthly > 0, 'default-color': report.balanceMonthly == 0 }\" mdbWavesEffect>\r\n                                <mdb-card-body>\r\n                                    <mdb-card-text>\r\n                                        <p class=\"text-light\">Faturamento mensal</p>\r\n                                    </mdb-card-text>\r\n                                    <mdb-card-title>\r\n                                        <h4 >{{ report.balanceMonthly | currency:'BRL' }}</h4>\r\n                                    </mdb-card-title>                  \r\n                                </mdb-card-body>\r\n                            </mdb-card>\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"main-content\" *ngFor=\"let report of annualReport; let i = index;\">\r\n            <div class=\"row\">\r\n                <div class=\"col\">\r\n                    <p style=\"margin-top: 10px;\">Rendimentos de {{ months[i] }} de {{ yearSelected }}</p>\r\n                </div>\r\n            </div>\r\n            <table>\r\n                <tr>\r\n                    <th class=\"info-color\">RECEITAS</th>\r\n                    <th class=\"danger-color\">DESPESAS</th>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <div class=\"box-moviment\" *ngFor=\"let recipe of report.recipes\">\r\n                            <mdb-card class=\"z-depth-0\" mdbWavesEffect>\r\n                                <mdb-card-body>\r\n                                    <mdb-card-text>{{ recipe.description }}</mdb-card-text>\r\n                                    <mdb-card-title>\r\n                                        <h4 class=\"text-info\">{{ recipe.value | currency:'BRL' }}</h4>\r\n                                    </mdb-card-title>    \r\n                                    <mdb-card-text>{{ recipe.registeredIn | date: 'dd/MM/yyyy' }}</mdb-card-text>   \r\n                                    <mdb-card-text *ngIf=\"recipe.offerer != null\" >{{ recipe.offerer }}</mdb-card-text> \r\n                                    <mdb-card-text *ngIf=\"recipe.details != null\" >{{ recipe.details }}</mdb-card-text>            \r\n                                </mdb-card-body>\r\n                            </mdb-card>\r\n                        </div>\r\n                    </td>\r\n                    <td>\r\n                        <div class=\"box-moviment\" *ngFor=\"let expense of report.expenses\">\r\n                            <mdb-card class=\"z-depth-0\" mdbWavesEffect>\r\n                                <mdb-card-body>\r\n                                    <mdb-card-text>{{ expense.description }}</mdb-card-text>\r\n                                    <mdb-card-title>\r\n                                        <h4 class=\"text-danger\">{{ expense.value | currency:'BRL' }}</h4>\r\n                                    </mdb-card-title>    \r\n                                    <mdb-card-text>{{ expense.registeredIn | date: 'dd/MM/yyyy' }}</mdb-card-text>   \r\n                                    <mdb-card-text *ngIf=\"expense.details != null\" >{{ expense.details }}</mdb-card-text>             \r\n                                </mdb-card-body>\r\n                            </mdb-card>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <mdb-card class=\"indigo lighten-5 z-depth-0\" mdbWavesEffect>\r\n                            <mdb-card-body>\r\n                                <mdb-card-text>Receitas mensais</mdb-card-text>\r\n                                <mdb-card-title>\r\n                                    <h4>{{ report.incomeRecipesMonthly | currency:'BRL' }}</h4>\r\n                                </mdb-card-title>                   \r\n                            </mdb-card-body>\r\n                        </mdb-card>\r\n                    </td>\r\n                    <td>\r\n                        <mdb-card class=\"indigo lighten-5 z-depth-0\" mdbWavesEffect>\r\n                            <mdb-card-body>\r\n                                <mdb-card-text>Despesas mensais</mdb-card-text>\r\n                                <mdb-card-title>\r\n                                    <h4>{{ report.incomeExpensesMonthly | currency:'BRL' }}</h4>\r\n                                </mdb-card-title>                   \r\n                            </mdb-card-body>\r\n                        </mdb-card>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td colspan=\"2\">\r\n                        <mdb-card class=\"text-white z-depth-0\" [ngClass]=\"{ 'danger-color': report.balanceMonthly < 0, 'info-color': report.balanceMonthly > 0, 'default-color': report.balanceMonthly == 0 }\" mdbWavesEffect>\r\n                            <mdb-card-body>\r\n                                <mdb-card-text>\r\n                                    <p class=\"text-light\">Faturamento mensal</p>\r\n                                </mdb-card-text>\r\n                                <mdb-card-title>\r\n                                    <h4 >{{ report.balanceMonthly | currency:'BRL' }}</h4>\r\n                                </mdb-card-title>                  \r\n                            </mdb-card-body>\r\n                        </mdb-card>\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n    </div>\r\n</div> \r\n \r\n<div class=\"mobile body-background\">\r\n    <div class=\"hero hero-background\">\r\n        <div class=\"header-page\">\r\n            <div class=\"name-page\">\r\n                <mat-icon>description</mat-icon>\r\n                <h2>Relatório</h2>\r\n            </div>\r\n            <button type=\"button\" mdbBtn color=\"light\" class=\"z-depth-0\" (click)=\"download()\" mdbWavesEffect>IMPRIMIR</button>\r\n        </div>\r\n    </div>\r\n    <div class=\"report z-depth-0\">\r\n        <div *ngIf=\"loading\">\r\n            <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\r\n        </div>\r\n\r\n        <app-income></app-income>\r\n        \r\n        <mat-accordion>\r\n            <mat-expansion-panel>\r\n                <mat-expansion-panel-header mdbWavesEffect>\r\n                    <mat-panel-description>Escolha um período de referência</mat-panel-description>\r\n                </mat-expansion-panel-header>\r\n                <div class=\"row\">\r\n                    <div class=\"col-6\">\r\n                        <mat-form-field>\r\n                            <mat-label>Mês</mat-label>\r\n                            <mat-select [(value)]=\"monthSelected\" (selectionChange)=\"getReport()\">\r\n                                <mat-option *ngFor=\"let month of months\" [value]=\"month\">{{ month }}</mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-6\">\r\n                        <mat-form-field>\r\n                            <mat-label>Ano</mat-label>\r\n                            <mat-select [(value)]=\"yearSelected\" (selectionChange)=\"getReport()\">\r\n                                <mat-option *ngFor=\"let year of years\" [value]=\"year\">{{ year }}</mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n            </mat-expansion-panel>\r\n        </mat-accordion>\r\n        <div class=\"main-content\">\r\n            <div class=\"row\">\r\n                <div class=\"col\">\r\n                    <mdb-card class=\"empty-data\" *ngIf=\"report.recipes.length == 0 && report.expenses.length == 0\" mdbWavesEffect>\r\n                        <mdb-card-body>\r\n                            <img src=\"/assets/img/folder-empty.png\" alt=\"empty\" width=\"200px\" height=\"200px\">\r\n                            <h4>Nenhuma registro encontrado</h4>\r\n                            <h5>Verifique o periodo solicitado</h5>      \r\n                        </mdb-card-body>\r\n                    </mdb-card>\r\n                </div>\r\n            </div>\r\n            <div *ngIf=\"report.recipes[0] != null || report.expenses[0] != null\">\r\n                <div class=\"row\">\r\n                    <div class=\"col\">\r\n                        <p style=\"margin-top: 10px;\">Rendimentos de {{ monthSelected }} de {{ yearSelected }}</p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <mdb-card class=\"z-depth-0\" mdbWavesEffect>\r\n                            <mdb-card-body>\r\n                                <canvas mdbChart\r\n                                    [chartType]=\"chartType\"\r\n                                    [(datasets)]=\"recipes\"\r\n                                    [labels]=\"labelsRecipes\"\r\n                                    [colors]=\"colorsRecipes\"\r\n                                    [options]=\"chartOptions\"\r\n                                    [legend]=\"false\"\r\n                                >\r\n                                </canvas>\r\n                            </mdb-card-body> \r\n                        </mdb-card>\r\n                    </div>\r\n                </div>\r\n                <table>\r\n                    <tr>\r\n                        <th class=\"info-color\">RECEITAS</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            <div class=\"box-moviment\" *ngFor=\"let recipe of report.recipes\">\r\n                                <mdb-card class=\"z-depth-0\" mdbWavesEffect>\r\n                                    <mdb-card-body>\r\n                                        <mdb-card-text>{{ recipe.description }}</mdb-card-text>\r\n                                        <mdb-card-title>\r\n                                            <h4 class=\"text-info\">{{ recipe.value | currency:'BRL' }}</h4>\r\n                                        </mdb-card-title>    \r\n                                        <mdb-card-text>{{ recipe.registeredIn | date: 'dd/MM/yyyy' }}</mdb-card-text>   \r\n                                        <mdb-card-text *ngIf=\"recipe.offerer != null\" >{{ recipe.offerer }}</mdb-card-text> \r\n                                        <mdb-card-text *ngIf=\"recipe.details != null\" >{{ recipe.details }}</mdb-card-text>            \r\n                                    </mdb-card-body>\r\n                                </mdb-card>\r\n                            </div>                              \r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            <mdb-card class=\"z-depth-0 indigo lighten-5\" mdbWavesEffect>\r\n                                <mdb-card-body>\r\n                                    <mdb-card-text>Receitas mensais</mdb-card-text>\r\n                                    <mdb-card-title>\r\n                                        <h4>{{ report.incomeRecipesMonthly | currency:'BRL' }}</h4>\r\n                                    </mdb-card-title>                   \r\n                                </mdb-card-body>\r\n                            </mdb-card>\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n                <div class=\"row\">\r\n                    <div class=\"col\">\r\n                        <mdb-card class=\"z-depth-0\" mdbWavesEffect>\r\n                            <mdb-card-body>\r\n                                <canvas mdbChart\r\n                                    [chartType]=\"chartType\"\r\n                                    [(datasets)]=\"expenses\"\r\n                                    [labels]=\"labelsExpenses\"\r\n                                    [colors]=\"colorsExpenses\"\r\n                                    [options]=\"chartOptions\"\r\n                                    [legend]=\"false\"\r\n                                >\r\n                                </canvas>\r\n                            </mdb-card-body> \r\n                        </mdb-card>\r\n                    </div>\r\n                </div>\r\n                <table>\r\n                    <tr>\r\n                        <th class=\"danger-color\">DESPESAS</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            <div class=\"box-moviment\" *ngFor=\"let expense of report.expenses\">\r\n                                <mdb-card class=\"z-depth-0\" mdbWavesEffect>\r\n                                    <mdb-card-body>\r\n                                        <mdb-card-text>{{ expense.description }}</mdb-card-text>\r\n                                        <mdb-card-title>\r\n                                            <h4 class=\"text-danger\">{{ expense.value | currency:'BRL' }}</h4>\r\n                                        </mdb-card-title>    \r\n                                        <mdb-card-text>{{ expense.registeredIn | date: 'dd/MM/yyyy' }}</mdb-card-text>   \r\n                                        <mdb-card-text *ngIf=\"expense.details != null\" >{{ expense.details }}</mdb-card-text>             \r\n                                    </mdb-card-body>\r\n                                </mdb-card>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            <mdb-card class=\"z-depth-0 indigo lighten-5\" mdbWavesEffect>\r\n                                <mdb-card-body >\r\n                                    <mdb-card-text>Despesas mensais</mdb-card-text>\r\n                                    <mdb-card-title>\r\n                                        <h4>{{ report.incomeExpensesMonthly | currency:'BRL' }}</h4>\r\n                                    </mdb-card-title>                   \r\n                                </mdb-card-body>\r\n                            </mdb-card>\r\n                        </td>\r\n                    </tr>\r\n                </table> \r\n                <table>\r\n                    <tr>\r\n                        <td colspan=\"2\">\r\n                            <mdb-card class=\"text-white z-depth-0\" [ngClass]=\"{ 'danger-color': report.balanceMonthly < 0, 'info-color': report.balanceMonthly > 0, 'default-color': report.balanceMonthly == 0 }\" mdbWavesEffect>\r\n                                <mdb-card-body>\r\n                                    <mdb-card-text>\r\n                                        <p class=\"text-light\">Faturamento mensal</p>\r\n                                    </mdb-card-text>\r\n                                    <mdb-card-title>\r\n                                        <h4 >{{ report.balanceMonthly  | currency:'BRL' }}</h4>\r\n                                    </mdb-card-title>                  \r\n                                </mdb-card-body>\r\n                            </mdb-card>\r\n                        </td> \r\n                    </tr>\r\n                </table>        \r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<app-footer></app-footer>  ","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport * as moment from \"moment\";\r\n\r\nimport { Expense } from 'src/app/shared/models/expense.entity';\r\nimport { Recipe } from 'src/app/shared/models/recipe.entity';\r\nimport { DateValidator } from 'src/app/shared/validators/date.validator';\r\nimport { TransactionType } from 'src/app/shared/models/enums/transaction-type.enum';\r\nimport { TransactionsService } from 'src/app/shared/services/transactions.service';\r\n\r\n@Component({\r\n  selector: 'app-transactions',\r\n  templateUrl: './transactions.component.html',\r\n  styleUrls: ['./transactions.component.scss']\r\n})\r\nexport class TransactionsComponent implements OnInit {\r\n\r\n  public formRecipes: FormGroup;\r\n  public formExpenses: FormGroup;\r\n\r\n  public treasuryId: number = 0;\r\n\r\n  public rows: any[] = [];\r\n  public loading = true;\r\n  public transactionsSelected: any = [];\r\n  public dateValidator = new DateValidator();\r\n  public transactionType = TransactionType;\r\n\r\n  public yearSelected = 2020;\r\n  public monthSelected = 'Todos os meses';\r\n  public typeTransactionSelected = 'RECEITA E DESPESA';\r\n\r\n  public years = [ 2019, 2020, 2021 ];\r\n  public months = [\r\n    'Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho',\r\n    'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro','Todos os meses'\r\n  ];\r\n  public types = ['RECEITA', 'DESPESA', 'RECEITA E DESPESA'];\r\n\r\n  @ViewChild('income', { static: true }) incomeComponent: any;\r\n  \r\n  public constructor(\r\n                      private readonly _fb: FormBuilder, \r\n                      private readonly router: Router, \r\n                      private readonly toastr: ToastrService, \r\n                      private readonly transactionsService: TransactionsService\r\n  ) { }\r\n  \r\n  public load() {\r\n    this.incomeComponent.load();\r\n    const month = this.months.indexOf(this.monthSelected);\r\n    this.transactionsService.findAll(this.treasuryId, this.typeTransactionSelected, this.yearSelected, month).subscribe( response => {\r\n      this.rows = response.body;\r\n      this.loading = false;\r\n    }, err => {\r\n      this.errorMessage(err);\r\n    });\r\n  }\r\n\r\n  private errorMessage(err: any) {\r\n    if(err.status == 0) {\r\n      this.toastr.error('Servidor Inacessível', 'ERRO', { progressBar: true });\r\n    }\r\n\r\n    else if(err.status == 401) {\r\n      this.router.navigateByUrl('/login');\r\n      this.toastr.info('Necessário autenticação', 'ERRO', { progressBar: true });\r\n      localStorage.removeItem('id_token');\r\n      localStorage.removeItem('user_id');\r\n    }\r\n\r\n    else {\r\n      this.toastr.error(err.error.details, 'ERRO', { progressBar: true });\r\n      this.router.navigateByUrl('/home');\r\n    }\r\n  }\r\n\r\n  public whenSelecting(transactions: any) {\r\n    this.transactionsSelected = transactions.selected;\r\n  }\r\n\r\n  public hideModalRecipe(modal: any) {\r\n    this.resetFormRecipes();\r\n    modal.hide();\r\n  }\r\n\r\n  public showModalRecipe(modal: any) {\r\n    this.resetFormRecipes();\r\n    modal.show();\r\n  }\r\n\r\n  public showModalExpense(modal: any) {\r\n    this.resetFormRecipes();\r\n    modal.show();\r\n  }\r\n\r\n  public hideModalUpdateExpense(modal: any) {\r\n    this.resetFormExpenses();\r\n    modal.hide();\r\n  }\r\n\r\n  public resetFormRecipes() {\r\n    this.formRecipes.patchValue({\r\n        id: null,\r\n        description: '',\r\n        value: '',\r\n        offerer: null,\r\n        registeredIn: moment().format('DDMMYYYY'),\r\n        details: null\r\n    });\r\n  }\r\n\r\n  public resetFormExpenses() {\r\n    this.formExpenses.patchValue({\r\n      id: null,\r\n      description: '',\r\n      value: '',\r\n      registeredIn: moment().format('DDMMYYYY'),\r\n      details: null,\r\n    });\r\n  }\r\n\r\n  public saveOrUpdateRecipe(recipe: Recipe, modal: any) {\r\n    let newRecipe = new Recipe({\r\n      id: recipe.id,\r\n      description: recipe.description,\r\n      value: recipe.value,\r\n      offerer: recipe.offerer,\r\n      type: TransactionType.RECIPE,\r\n      details: recipe.details,\r\n      registeredIn: moment(recipe.registeredIn, 'DDMMYYYY', true).toDate()\r\n    });\r\n    \r\n    if(!newRecipe.id) {\r\n      this.transactionsService.createRecipe(this.treasuryId, newRecipe).subscribe(res => {\r\n        this.toastr.success('Criado com sucesso', 'Feito', { progressBar: true });  \r\n        this.load(); \r\n      }\r\n      , err => {\r\n        this.errorMessage(err);\r\n      });\r\n    }\r\n    else { \r\n      this.transactionsService.updateRecipe(this.treasuryId, newRecipe).subscribe(res => {\r\n        this.toastr.success('Atualizado com sucesso', 'Feito', { progressBar: true });\r\n        this.load();\r\n      }\r\n      , err => {\r\n        this.errorMessage(err);\r\n      });\r\n    }\r\n    modal.hide();\r\n    this.resetFormRecipes();\r\n  }\r\n\r\n  public saveOrUpdateExpense(expense: Expense, modal: any) {\r\n    let newExpense: Expense = new Expense({\r\n      id: expense.id,\r\n      description: expense.description,\r\n      value: expense.value,\r\n      type: TransactionType.EXPENSE,\r\n      details: expense.details,\r\n      registeredIn: moment(expense.registeredIn, 'DDMMYYYY', true).toDate()\r\n    });\r\n\r\n    if(!newExpense.id) {\r\n      this.transactionsService.createExpense(this.treasuryId, newExpense).subscribe(res => {\r\n        this.toastr.success('Criado com sucesso', 'Feito', { progressBar: true });  \r\n        this.load();  \r\n      }, err => {\r\n        this.errorMessage(err);\r\n      });\r\n    }\r\n    else {\r\n      this.transactionsService.updateExpense(this.treasuryId, newExpense).subscribe(res => {\r\n        this.toastr.success('Atualizado com sucesso', 'Feito', { progressBar: true });\r\n        this.load();\r\n      }, err => {\r\n        this.errorMessage(err);\r\n      });\r\n    }\r\n    modal.hide();\r\n    this.resetFormExpenses();\r\n  }\r\n\r\n  public deleteTransactionsSelected() {\r\n    Swal.fire({\r\n      title: 'Tem certeza que deseja remover?',\r\n      text: 'Você não poderá desfazer essa operação',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Sim',\r\n      cancelButtonText: 'Não'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.transactionsSelected.forEach(transaction => {\r\n          if(transaction.type == TransactionType.RECIPE) {\r\n            this.transactionsService.deleteRecipe(this.treasuryId, transaction.id).subscribe(res => {\r\n              this.toastr.success('Removido com sucesso', 'Feito', { progressBar: true });\r\n              this.load();\r\n            }, err => {\r\n              this.errorMessage(err);\r\n            });\r\n          } else {\r\n            this.transactionsService.deleteExpense(this.treasuryId, transaction.id).subscribe(res => {\r\n              this.toastr.success('Removido com sucesso', 'Feito', { progressBar: true });\r\n              this.load();\r\n            }, err => {\r\n              this.errorMessage(err);\r\n            });\r\n          }\r\n        });\r\n        this.transactionsSelected = [];\r\n      } \r\n    });\r\n  }\r\n\r\n  public deleteTransaction(transaction: any) {\r\n    Swal.fire({\r\n      title: 'Tem certeza que deseja remover?',\r\n      text: 'Você não poderá desfazer essa operação',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Sim',\r\n      cancelButtonText: 'Não'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        if(transaction.type == TransactionType.RECIPE) {\r\n          this.transactionsService.deleteRecipe(this.treasuryId, transaction.id).subscribe(res => {\r\n            this.toastr.success('Removido com sucesso', 'Feito', { progressBar: true });\r\n            this.load();\r\n          }, err => {\r\n            this.errorMessage(err);\r\n          });\r\n        } else {\r\n          this.transactionsService.deleteExpense(this.treasuryId, transaction.id).subscribe(res => {\r\n            this.toastr.success('Removido com sucesso', 'Feito', { progressBar: true });\r\n            this.load();\r\n          }, err => {\r\n            this.errorMessage(err);\r\n          });\r\n        }\r\n      } \r\n    });\r\n  }\r\n\r\n  public setFormRecipeOrExpense(row: any, modalUpdateRecipe: any, modalUpdateExpense: any) {\r\n    if(row.type === TransactionType.EXPENSE) {\r\n      this.formExpenses.patchValue({\r\n        id: row.id,\r\n        description: row.description,\r\n        value: row.value,\r\n        registeredIn: moment(row.registeredIn).format('DDMMYYYY'),\r\n        details: row.details,\r\n      });\r\n      modalUpdateExpense.show();\r\n    }\r\n    if(row.type === TransactionType.RECIPE) {\r\n      this.formRecipes.patchValue({\r\n        id: row.id,\r\n        description: row.description,\r\n        value: row.value,\r\n        offerer: row.offerer,\r\n        registeredIn: moment(row.registeredIn).format('DDMMYYYY'),\r\n        details: row.details\r\n      });\r\n      modalUpdateRecipe.show();\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.treasuryId = parseInt(this.router.url.split('/')[2]);\r\n    this.load();\r\n    this.formRecipes = this._fb.group({\r\n      id: [null],\r\n      description: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(60)]],\r\n      value :[Validators.required],\r\n      offerer: [null, [Validators.minLength(2), Validators.maxLength(60)]],\r\n      type: [TransactionType.RECIPE],\r\n      registeredIn: [moment().format('DDMMYYYY'), [Validators.required, this.dateValidator.validate()]],\r\n      details: [null, Validators.maxLength(255)],\r\n    });\r\n\r\n    this.formExpenses = this._fb.group({\r\n      id: [null],\r\n      description:['', [Validators.required, Validators.minLength(3), Validators.maxLength(60)]],\r\n      value:['', Validators.required],\r\n      type: [TransactionType.EXPENSE],\r\n      registeredIn: [moment().format('DDMMYYYY'), [Validators.required, this.dateValidator.validate()]],\r\n      details: [null, Validators.maxLength(255)]\r\n    });\r\n  }\r\n}","<app-menu></app-menu>\r\n<div class=\"body body-background\">\r\n    <div class=\"hero hero-background\">\r\n        <div class=\"row info-page\">\r\n            <div class=\"col-md-6 col-lg-6 col-xl-8\">\r\n                <div class=\"name-page\">\r\n                    <mat-icon>layers</mat-icon>\r\n                    <h2>Transações</h2>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-3 col-lg-3 col-xl-2\">\r\n                <button type=\"button\" mdbBtn color=\"light\" block=\"true\" class=\"z-depth-0\" (click)=\"showModalRecipe(modalRecipe)\" mdbWavesEffect>NOVA RECEITA</button>\r\n            </div>\r\n            <div class=\"col-md-3 col-lg-3 col-xl-2\">\r\n                <button type=\"button\" mdbBtn color=\"light\" block=\"true\" class=\"z-depth-0\" (click)=\"showModalExpense(modalExpense)\" mdbWavesEffect>NOVA DESPESA</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"moviment z-depth-1-half\">\r\n        <div class=\"header\">\r\n            <app-income #income></app-income>\r\n            <mat-accordion>\r\n                <mat-expansion-panel>\r\n                    <mat-expansion-panel-header mdbWavesEffect>\r\n                        <mat-panel-description>Filtre as transações que deseja gerenciar</mat-panel-description>\r\n                    </mat-expansion-panel-header>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field style=\"width: 100%;\">\r\n                                <mat-label>Ano</mat-label>\r\n                                <mat-select [(value)]=\"yearSelected\" (selectionChange)=\"load()\">\r\n                                    <mat-option *ngFor=\"let year of years\" [value]=\"year\">{{ year }}</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field style=\"width: 100%;\">\r\n                                <mat-label>Mês</mat-label>\r\n                                <mat-select [(value)]=\"monthSelected\" (selectionChange)=\"load()\">\r\n                                    <mat-option *ngFor=\"let month of months\" [value]=\"month\">{{ month }}</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <mat-form-field style=\"width: 100%;\">\r\n                                <mat-label>Tipo de transação</mat-label>\r\n                                <mat-select [(value)]=\"typeTransactionSelected\" (selectionChange)=\"load()\">\r\n                                    <mat-option *ngFor=\"let type of types\" [value]=\"type\" >{{ type }}</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                </mat-expansion-panel>\r\n            </mat-accordion>\r\n            <div class=\"all-delete\">\r\n                <div class=\"alert alert-warning\" role=\"alert\" *ngIf=\"transactionsSelected.length > 1\">\r\n                    {{ transactionsSelected.length }} selecionado(s) ...\r\n                    <button (click)=\"deleteTransactionsSelected()\" mat-icon-button>\r\n                        <mat-icon>delete</mat-icon>\r\n                    </button>\r\n                </div>\r\n            </div>  \r\n        </div>\r\n        <div class=\"main-content\">\r\n            <ngx-datatable\r\n                [rows]=\"rows\"\r\n                class=\"material\"\r\n                [loadingIndicator]=\"loading\"\r\n                [columnMode]=\"'force'\"\r\n                [headerHeight]=\"50\"\r\n                [footerHeight]=\"50\"\r\n                [rowHeight]=\"'auto'\"\r\n                [messages]=\"{emptyMessage: '<center>Nenhuma movimentação cadastrada</center>', totalMessage: 'total', selectedMessage: 'selecionado'}\"\r\n                [selectionType]=\"'checkbox'\"\r\n                (select)=\"whenSelecting($event)\"\r\n                [selected]=\"transactionsSelected\"\r\n                [limit]=\"6\"\r\n            >\r\n            <ngx-datatable-column\r\n                [width]=\"50\"\r\n                [sortable]=\"false\"\r\n                [canAutoResize]=\"false\"\r\n                [draggable]=\"false\"\r\n                [resizeable]=\"false\"\r\n                [headerCheckboxable]=\"true\"\r\n                [checkboxable]=\"true\">\r\n    \r\n            </ngx-datatable-column>\r\n                <ngx-datatable-column name=\"Descrição\" [width]=\"250\" prop=\"description\"></ngx-datatable-column>\r\n                <ngx-datatable-column name=\"Valor\" [width]=\"100\">\r\n                    <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                        <div >{{ row.value | currency:'BRL' }}</div>\r\n                    </ng-template>\r\n                </ngx-datatable-column>\r\n                <ngx-datatable-column name=\"Registrado em\" [width]=\"100\">\r\n                    <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                        <div >{{ row.registeredIn | date: 'dd/MM/yyyy' }}</div>\r\n                    </ng-template>\r\n                </ngx-datatable-column>\r\n                <ngx-datatable-column name=\"Tipo\" [width]=\"150\">\r\n                    <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\r\n                    <div class=\"tipo-movimentacao\" [ngClass]=\"{'info-color': row.type == transactionType.RECIPE, 'danger-color': row.type == transactionType.EXPENSE }\" mdbWavesEffect>{{ row.type }}</div>\r\n                    </ng-template>\r\n                </ngx-datatable-column>\r\n                <ngx-datatable-column name=\"Ações\" [width]=\"100\">\r\n                    <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\r\n                        <button class=\"button-actions\" (click)=\"setFormRecipeOrExpense(row, modalUpdateRecipe, modalUpdateExpense)\" mat-icon-button>\r\n                            <mat-icon>edit</mat-icon>\r\n                        </button>\r\n                        <button class=\"button-actions \" (click)=\"deleteTransaction(row)\" mat-icon-button>\r\n                            <mat-icon>delete</mat-icon>\r\n                        </button>\r\n                    </ng-template>\r\n                </ngx-datatable-column>\r\n            </ngx-datatable>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"mobile body-background\">\r\n    <div class=\"hero hero-background\">\r\n        <div class=\"header-page\">\r\n            <div class=\"name-page\">\r\n                <mat-icon>layers</mat-icon>\r\n                <h2>Transações</h2>\r\n            </div>\r\n            <button type=\"button\" mdbBtn color=\"light\" class=\"z-depth-0\" (click)=\"showModalRecipe(modalRecipe)\" mdbWavesEffect>NOVA RECEITA</button>\r\n            <button type=\"button\" mdbBtn color=\"light\" class=\"z-depth-0\" (click)=\"showModalExpense(modalExpense)\" mdbWavesEffect>NOVA DESPESA</button>\r\n        </div>\r\n    </div>\r\n    <div class=\"movment\">\r\n        <app-income></app-income>\r\n        <mat-accordion>\r\n            <mat-expansion-panel>\r\n                <mat-expansion-panel-header mdbWavesEffect>\r\n                    <mat-panel-description>Filtre as transações que deseja gerenciar</mat-panel-description>\r\n                </mat-expansion-panel-header>\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <mat-form-field style=\"width: 100%;\">\r\n                            <mat-label>Ano</mat-label>\r\n                            <mat-select [(value)]=\"yearSelected\" (selectionChange)=\"load()\">\r\n                                <mat-option *ngFor=\"let year of years\" [value]=\"year\">{{ year }}</mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-12\">\r\n                        <mat-form-field style=\"width: 100%;\">\r\n                            <mat-label>Mês</mat-label>\r\n                            <mat-select [(value)]=\"monthSelected\" (selectionChange)=\"load()\">\r\n                                <mat-option *ngFor=\"let month of months\" [value]=\"month\">{{ month }}</mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-12\">\r\n                        <mat-form-field style=\"width: 100%;\">\r\n                            <mat-label>Tipo de transação</mat-label>\r\n                            <mat-select [(value)]=\"typeTransactionSelected\" (selectionChange)=\"load()\">\r\n                                <mat-option *ngFor=\"let type of types\" [value]=\"type\" >{{ type }}</mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n            </mat-expansion-panel>\r\n        </mat-accordion>\r\n        <ngx-datatable\r\n            [rows]=\"rows\"\r\n            class=\"material z-depth-0\"\r\n            [loadingIndicator]=\"loading\"\r\n            [messages]=\"{emptyMessage: '<center>Nenhuma movimentação cadastrada</center>', totalMessage: 'total', selectedMessage: 'selecionado'}\"\r\n            [columnMode]=\"'force'\"\r\n            [headerHeight]=\"50\"\r\n            [footerHeight]=\"50\"\r\n            [rowHeight]=\"50\"\r\n            [limit]=\"6\"\r\n        >\r\n            <ngx-datatable-column name=\"Descrição\" [width]=\"250\" prop=\"description\"></ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Valor\" [width]=\"100\" prop=\"value\">\r\n                <ng-template let-column=\"column\" let-sort=\"sortFn\" ngx-datatable-header-template>\r\n                    <span class=\"mobile-hidden\">{{ column.name }}</span>\r\n                  </ng-template>\r\n                  <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n                    <span class=\"mobile-hidden\">{{ value | currency:'BRL' }}</span>\r\n                  </ng-template>\r\n            </ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Ações\" [width]=\"100\">\r\n                <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                    <button class=\"btn-more\" [matMenuTriggerFor]=\"actions\"  mat-icon-button>\r\n                        <mat-icon>more_vert</mat-icon>\r\n                    </button>\r\n                    <mat-menu #actions=\"matMenu\">\r\n                        <button style=\"outline: none;\" mat-menu-item  (click)=\"setFormRecipeOrExpense(row, modalUpdateRecipe, modalUpdateExpense)\">\r\n                            <mat-icon>edit</mat-icon>Editar\r\n                        </button>\r\n                        <button mat-menu-item (click)=\"deleteTransaction(row)\">\r\n                            <mat-icon>delete</mat-icon>Deletar\r\n                        </button>\r\n                    </mat-menu> \r\n                </ng-template>\r\n            </ngx-datatable-column>\r\n        </ngx-datatable>\r\n    </div>\r\n</div>\r\n<app-footer></app-footer>\r\n\r\n<div mdbModal #modalRecipe=\"mdbModal\" class=\"modal fade modal-zindex\">\r\n    <div class=\"modal-dialog modal-md modal-dialog-centered modal-dialog-scrollable\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close pull-right btn-hide-modal\" (click)=\"hideModalRecipe(modalRecipe)\">\r\n                <span>×</span>\r\n                </button>\r\n                <h4 class=\"modal-title w-100\">NOVA RECEITA</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <form [formGroup]=\"formRecipes\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-8\">\r\n                            <mat-form-field  class=\"input-width\">\r\n                                <input matInput placeholder=\"Descrição\" formControlName=\"description\" required>\r\n                                <mat-error>Informe no mínimo quatro caracteres</mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                            <mat-form-field  class=\"input-width\">\r\n                                <input matInput placeholder=\"Valor\" formControlName=\"value\" currencyMask [options]=\"{ prefix: 'R$ ', thousands: '.', decimal: ',' }\" required >\r\n                                <mat-error>Esse campo é obrigatório</mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-8\">\r\n                            <mat-form-field  class=\"input-width\">\r\n                                <input matInput placeholder=\"Ofertante\" formControlName=\"offerer\">\r\n                                <mat-error>Informe no mínimo quatro caracteres</mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                            <mat-form-field class=\"input-width\">\r\n                                <input matInput placeholder=\"Registrado em\" formControlName=\"registeredIn\" mask=\"00/00/0000\" required>\r\n                                <mat-error>A data de registro deve ser válida</mat-error>\r\n                            </mat-form-field> \r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col\">\r\n                            <mat-form-field class=\"input-width\">\r\n                                <textarea  #obs matInput placeholder=\"Detalhes\" maxlength=\"200\" formControlName=\"details\"></textarea>\r\n                                <mat-error>Informe um valor com no mínimo quatro caracteres</mat-error>\r\n                                <mat-hint>{{obs.value?.length || 0}}/200</mat-hint>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>    \r\n                </form>\r\n            </div>\r\n            <div class=\"modal-footer\"> \r\n                <button type=\"button\" mdbBtn color=\"primary\" class=\"relative waves-light z-depth-0\" [disabled]=\"!formRecipes.valid\" (click)=\"saveOrUpdateRecipe(formRecipes.value, modalRecipe)\" mdbWavesEffect>SALVAR</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div mdbModal #modalUpdateRecipe=\"mdbModal\" class=\"modal fade modal-zindex\">\r\n    <div class=\"modal-dialog modal-md modal-dialog-centered modal-dialog-scrollable\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close pull-right btn-hide-modal\" (click)=\"hideModalRecipe(modalUpdateRecipe)\">\r\n                <span>×</span>\r\n                </button>\r\n                <h4 class=\"modal-title w-100\">EDITAR RECEITA</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <form [formGroup]=\"formRecipes\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-8\">\r\n                            <mat-form-field  class=\"input-width\">\r\n                                <input matInput placeholder=\"Descrição\" formControlName=\"description\" required>\r\n                                <mat-error>Informe no mínimo quatro caracteres</mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                            <mat-form-field  class=\"input-width\">\r\n                                <input matInput placeholder=\"Valor\" formControlName=\"value\" currencyMask [options]=\"{ prefix: 'R$ ', thousands: '.', decimal: ',' }\" required >\r\n                                <mat-error>Esse campo é obrigatório</mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-8\">\r\n                            <mat-form-field  class=\"input-width\">\r\n                                <input matInput placeholder=\"Ofertante\" formControlName=\"offerer\">\r\n                                <mat-error>Informe no mínimo quatro caracteres</mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                            <mat-form-field  class=\"input-width\">\r\n                                <input matInput placeholder=\"Registrado em\" formControlName=\"registeredIn\" mask=\"00/00/0000\" required>\r\n                                <mat-error>A data de registro deve ser válida</mat-error>\r\n                            </mat-form-field> \r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col\">\r\n                            <mat-form-field class=\"input-width\">\r\n                                <textarea  #obs matInput placeholder=\"Detalhes\" maxlength=\"200\" formControlName=\"details\"></textarea>\r\n                                <mat-error>Informe um valor com no mínimo quatro caracteres</mat-error>\r\n                                <mat-hint>{{obs.value?.length || 0}}/200</mat-hint>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>       \r\n                </form>\r\n            </div>\r\n            <div class=\"modal-footer\"> \r\n                <button type=\"button\" mdbBtn color=\"primary\" class=\"relative waves-light z-depth-0\" [disabled]=\"!formRecipes.valid\" (click)=\"saveOrUpdateRecipe(formRecipes.value, modalUpdateRecipe)\" mdbWavesEffect>ATUALIZAR</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div mdbModal #modalExpense=\"mdbModal\" style=\"overflow-y: auto\" class=\"modal fade modal-zindex\">\r\n    <div class=\"modal-dialog modal-sm modal-dialog-centered\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close pull-right btn-hide-modal\" (click)=\"modalExpense.hide()\">\r\n                <span>×</span>\r\n                </button>\r\n                <h4 class=\"modal-title w-100\">NOVA DESPESA</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <form [formGroup]=\"formExpenses\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col\">\r\n                            <mat-form-field  class=\"input-width\">\r\n                                <input matInput placeholder=\"Descrição\" formControlName=\"description\">\r\n                                <mat-error>Informe no mínimo 4  e no máximo 50 caracteres</mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col\">\r\n                            <mat-form-field  class=\"input-width\">\r\n                                <input matInput placeholder=\"Valor\" formControlName=\"value\" currencyMask [options]=\"{ prefix: 'R$ ', thousands: '.', decimal: ',' }\" required >\r\n                                <mat-error>Esse campo é obrigatório</mat-error>\r\n                            </mat-form-field> \r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col\">\r\n                            <mat-form-field  class=\"input-width\">\r\n                                <input matInput placeholder=\"Registrado em\" formControlName=\"registeredIn\" mask=\"00/00/0000\" required>\r\n                                <mat-error>A data de registro deve ser válida</mat-error>\r\n                            </mat-form-field> \r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col\">\r\n                            <mat-form-field class=\"input-width\">\r\n                                <textarea #details matInput placeholder=\"Detalhes\" maxlength=\"200\" formControlName=\"details\"></textarea>\r\n                                <mat-error>Informe um valor com no mínimo quatro caracteres</mat-error>\r\n                                <mat-hint>{{ details.value?.length || 0 }}/200</mat-hint>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div class=\"modal-footer\"> \r\n                <button type=\"button\" mdbBtn color=\"danger\" block=\"true\" class=\"relative waves-light z-depth-0\" [disabled]=\"!formExpenses.valid\" (click)=\"saveOrUpdateExpense(formExpenses.value, modalExpense)\" mdbWavesEffect>SALVAR</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div mdbModal #modalUpdateExpense=\"mdbModal\" class=\"modal fade modal-zindex\" style=\"overflow-y: auto\">\r\n    <div class=\"modal-dialog modal-sm modal-dialog-centered\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close pull-right btn-hide-modal\"(click)=\"hideModalUpdateExpense(modalUpdateExpense)\">\r\n                <span>×</span>\r\n                </button>\r\n                <h4 class=\"modal-title w-100\">EDITAR DESPESA</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <form [formGroup]=\"formExpenses\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col\">\r\n                            <mat-form-field  class=\"input-width\">\r\n                                <input matInput placeholder=\"Descrição\" formControlName=\"description\">\r\n                                <mat-error>Informe no mínimo 4  e no máximo 50 caracteres</mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col\">\r\n                            <mat-form-field  class=\"input-width\">\r\n                                <input matInput placeholder=\"Valor\" formControlName=\"value\" currencyMask [options]=\"{ prefix: 'R$ ', thousands: '.', decimal: ',' }\" required>\r\n                                <mat-error>Esse campo é obrigatório</mat-error>\r\n                            </mat-form-field> \r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col\">\r\n                            <mat-form-field  class=\"input-width\">\r\n                                <input matInput placeholder=\"Registrado em\" formControlName=\"registeredIn\" mask=\"00/00/0000\" required>\r\n                                <mat-error>A data de registro deve ser válida</mat-error>\r\n                            </mat-form-field> \r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col\">\r\n                            <mat-form-field class=\"input-width\">\r\n                                <textarea #input matInput placeholder=\"Detalhes\" maxlength=\"200\" formControlName=\"details\"></textarea>\r\n                                <mat-error>Informe um valor com no mínimo quatro caracteres</mat-error>\r\n                                <mat-hint>{{ input.value?.length || 0}}/200</mat-hint>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div class=\"modal-footer\"> \r\n                <button type=\"button\" mdbBtn color=\"danger\" block=\"true\" class=\"relative waves-light z-depth-0\" [disabled]=\"!formExpenses.valid\" (click)=\"saveOrUpdateExpense(formExpenses.value, modalUpdateExpense)\" mdbWavesEffect>ATUALIZAR</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\nimport { Treasury } from 'src/app/shared/models/treasury.entity';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { TreasuryService } from 'src/app/shared/services/treasury.service';\r\nimport { Pagination} from 'src/app/shared/models/pagination.entity';\r\nimport { PaginationService } from 'src/app/shared/pagination/pagination.service';\r\n\r\n@Component({\r\n  selector: 'app-treasury',\r\n  templateUrl: './treasury.component.html',\r\n  styleUrls: ['./treasury.component.scss']\r\n})\r\nexport class TreasuryComponent implements OnInit {\r\n\r\n  public f: FormGroup;\r\n  public search: FormControl = new FormControl();\r\n\r\n  @ViewChild('modalCreate', { static: false }) modalCreate: any;\r\n  @ViewChild('modalUpdate', { static: false }) modalUpdate: any;\r\n\r\n  public treasuries = [];\r\n  public pagination = new Pagination();\r\n  public loading = true;\r\n\r\n  public constructor(\r\n                private router: Router, \r\n                private _fb: FormBuilder, \r\n                private toastr: ToastrService, \r\n                private servico: TreasuryService,\r\n                private paginationService: PaginationService\r\n  ) { }\r\n\r\n  public load(paginacao: Pagination) {\r\n    this.loading = true;\r\n    this.servico.findPaginate(paginacao).subscribe( res => {\r\n      this.treasuries = res.body.data;\r\n      this.paginationService.loader(res.body.count, paginacao.pageCurrent);\r\n      this.loading = false;\r\n    }, err => {\r\n      this.errorMessage(err);\r\n    });\r\n  }\r\n\r\n  private errorMessage(err: any) {\r\n    if(err.status == 0) {\r\n      this.toastr.error('Servidor Inacessível', 'ERRO', { progressBar: true });\r\n    }\r\n\r\n    else if(err.status == 401) {\r\n      this.router.navigateByUrl('/login');\r\n      this.toastr.info('Necessário autenticação', 'ERRO', { progressBar: true });\r\n      localStorage.removeItem('id_token');\r\n      localStorage.removeItem('user_id');\r\n    }\r\n    else {\r\n      this.toastr.error(err.error.details, 'ERRO', { progressBar: true });\r\n    }\r\n  }\r\n\r\n  public changePage(pagination: any) {\r\n    this.pagination.pageCurrent = pagination.pageCurrent.label;\r\n    this.load(this.pagination);\r\n  }\r\n\r\n  public createOrUpdateTreasury(dados: Treasury) {\r\n    let userId = parseInt(localStorage.getItem('user_id'));\r\n    let treasury = new Treasury({\r\n      id: dados.id,\r\n      name: dados.name, \r\n      initialAmount: dados.initialAmount,\r\n      currentBalance: dados.currentBalance,\r\n      recipes: dados.recipes,\r\n      expenses: dados.expenses,\r\n      inventories: dados.inventories,\r\n      details: dados.details,\r\n      userId: userId\r\n    });\r\n    \r\n    if(!treasury.id) {\r\n      this.servico.save(treasury).subscribe(res => {\r\n        this.toastr.success('Criado com sucesso', 'Feito', { progressBar: true });  \r\n        this.hideModalCreate();    \r\n        this.load(new Pagination());  \r\n      }, err => {\r\n        this.errorMessage(err);\r\n      });\r\n    }\r\n    else {\r\n      this.servico.update(treasury).subscribe(res => {\r\n        this.toastr.success('Atualizado com sucesso', 'Feito', { progressBar: true });\r\n        this.hideModalUpdate();\r\n        this.load(new Pagination());\r\n      }, err => {\r\n        this.errorMessage(err);\r\n      });\r\n    }\r\n  }\r\n\r\n  public deleteTreasury(treasury: Treasury) {\r\n    Swal.fire({\r\n      title: 'Tem certeza que deseja remover?',\r\n      text: 'Você não poderá desfazer essa operação',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Sim',\r\n      cancelButtonText: 'Não'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.servico.remove(treasury.id).subscribe(r => {   \r\n          this.toastr.success('Removido com sucesso!', 'Feito', {progressBar: true});\r\n          this.load(new Pagination());\r\n        }, e =>{\r\n          this.errorMessage(e);\r\n        })\r\n      } \r\n    })\r\n  }\r\n\r\n  public hideModalCreate() {\r\n    this.modalCreate.hide();\r\n    this.f.reset();\r\n  }\r\n\r\n  public hideModalUpdate() {\r\n    this.modalUpdate.hide();\r\n    this.f.reset();\r\n  }\r\n\r\n  public showModalUpdate(treasury: Treasury) {\r\n    this.f.patchValue({\r\n      id: treasury.id,\r\n      name: treasury.name,\r\n      initialAmount: treasury.initialAmount,\r\n      currentBalance: treasury.currentBalance,\r\n      recipes: treasury.recipes,\r\n      expenses: treasury.expenses,\r\n      inventories: treasury.inventories,\r\n      details: treasury.details,\r\n      userId: treasury.userId\r\n    });\r\n    this.modalUpdate.show();\r\n  }\r\n\r\n  public addTransactions(id: number) {\r\n    this.router.navigateByUrl(`transactions/${id}`);\r\n  }\r\n\r\n  public emitterReport(id: number) {\r\n    this.router.navigateByUrl(`report/${id}`);\r\n  }\r\n\r\n  public showHistoric(id: number) {\r\n    this.router.navigateByUrl(`historic/${id}`);\r\n  }\r\n\r\n  public takeInventory(id: number) { this.router.navigateByUrl(`inventory/${id}`) }\r\n\r\n  ngOnInit() {\r\n    this.load(this.pagination);\r\n    this.search.valueChanges.pipe(debounceTime(700)).subscribe(value => {\r\n      this.pagination.filter = value;\r\n      this.load(this.pagination);\r\n    });\r\n\r\n    this.f = this._fb.group({\r\n      id: [null],\r\n      name:['', [Validators.required, Validators.minLength(4), Validators.maxLength(30)]],\r\n      initialAmount:['', [Validators.required]],\r\n      currentBalance:[0, []],\r\n      details: [null, [Validators.minLength(3), Validators.maxLength(255)]],\r\n      recipes: [[]],\r\n      expenses: [[]],\r\n      inventories: [[]],\r\n      userId:[]\r\n    });\r\n  }\r\n}","<app-menu></app-menu>\r\n<div class=\"body body-background\">\r\n    <div class=\"hero hero-background\">\r\n        <div class=\"row\">\r\n            <div class=\"col-xl-10 col-lg-8 col-md-8 col-sm-6\">\r\n                <div class=\"name-page\">\r\n                    <mat-icon>how_to_vote</mat-icon>\r\n                    <h2 >Tesourarias</h2>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-xl-2 col-lg-4 col-md-4 col-sm-6\">\r\n                <button type=\"button\" mdbBtn color=\"light\" block=\"true\" class=\"z-depth-0\" (click)=\"modalCreate.show()\" mdbWavesEffect>NOVA TESOURARIA</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"box z-depth-1-half\">\r\n        <div *ngIf=\"loading\">\r\n            <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\r\n        </div>\r\n        <div class=\"header\">\r\n            <mat-form-field class=\"input-width\" appearance=\"fill\">\r\n                <input [formControl]=\"search\" matInput placeholder=\"Diga-me o que deseja procurar\">\r\n                <button mat-icon-button matSuffix>\r\n                    <mat-icon>search</mat-icon>\r\n                </button>\r\n            </mat-form-field>\r\n        </div>\r\n        \r\n        <div class=\"main-content\">           \r\n            <div class=\"empty-data\" *ngIf=\"this.treasuries.length == 0\">\r\n                <img src=\"/assets/img/folder-empty.png\" alt=\"empty\">\r\n                <h4>Nenhuma tesouraria encontrada</h4>\r\n                <h5>Crie uma clicando no botão acima</h5>  \r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-4 col-lg-6 col-md-6\" *ngFor=\"let treasury of treasuries\">\r\n                    <mdb-card mdbWavesEffect>\r\n                        <app-charts-treasury [treasury]=\"treasury\"></app-charts-treasury>\r\n                        <mdb-card-body>\r\n                            <button class=\"icon-more-actions\" [matMenuTriggerFor]=\"actions\" mat-icon-button>\r\n                                <mat-icon>more_horiz</mat-icon>\r\n                            </button>\r\n                            <mat-menu #actions=\"matMenu\">\r\n                                <button style=\"outline: none;\" mat-menu-item (click)=\"emitterReport(treasury.id)\"><mat-icon>description</mat-icon>Ver relatório</button>\r\n                                <button mat-menu-item (click)=\"showHistoric(treasury.id)\"><mat-icon>batch_prediction</mat-icon>Ver histórico</button>\r\n                                <button mat-menu-item (click)=\"takeInventory(treasury.id)\"><mat-icon>style</mat-icon>Fazer inventário</button>\r\n                            </mat-menu>  \r\n                            <mdb-card-title>\r\n                                <h4>{{ treasury.name }}</h4>\r\n                            </mdb-card-title>\r\n                            <mdb-card-text>Atualizado em {{ treasury.updated | date: 'dd/MM/yyyy' }}</mdb-card-text>  \r\n                            <button mat-fab class=\"warning-color text-white z-depth-0\" style=\"margin-right: 5px\" (click)=\"addTransactions(treasury.id)\">\r\n                                <mat-icon>add</mat-icon>\r\n                            </button>\r\n                            <button mat-fab class=\"indigo text-white z-depth-0\" style=\"margin-right: 5px\" (click)=\"showModalUpdate(treasury)\">\r\n                                <mat-icon>edit</mat-icon>\r\n                            </button>\r\n                            <button mat-fab class=\"danger-color text-white z-depth-0\" (click)=\"deleteTreasury(treasury)\">\r\n                                <mat-icon>delete</mat-icon>\r\n                            </button>\r\n                            <hr>\r\n                            <p><mdb-icon fas icon=\"quote-left\"></mdb-icon> {{ treasury.details != null ? treasury.details: 'Não há detalhes para essa tesouraria' }}</p>\r\n                        </mdb-card-body>\r\n                    </mdb-card>\r\n                </div>\r\n            </div>            \r\n            <div class=\"main-footer\">\r\n                <div class=\"row\">\r\n                    <div class=\"col\">\r\n                        <app-pagination #pagination (click)=\"changePage(pagination)\"></app-pagination>\r\n                    </div>\r\n                </div>\r\n            </div> \r\n        </div> \r\n    </div>\r\n</div>\r\n<div class=\"mobile body-background\">\r\n    <div class=\"hero hero-background\">\r\n        <div class=\"header-page\">\r\n            <div class=\"name-page\">\r\n                <mat-icon>how_to_vote</mat-icon>\r\n                <h2>Tesourarias</h2>\r\n            </div>\r\n            <button type=\"button\" mdbBtn color=\"light\" block=\"true\" class=\"z-depth-0\" (click)=\"modalCreate.show()\" mdbWavesEffect>NOVA TESOURARIA</button>\r\n        </div>\r\n    </div>\r\n    <div class=\"box\">\r\n        <div *ngIf=\"loading\">\r\n            <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\r\n        </div>\r\n        <mat-form-field class=\"input-width\" appearance=\"fill\">\r\n            <input [formControl]=\"search\" matInput placeholder=\"Qual tesouraria você está procurando?\">\r\n            <button mat-icon-button matSuffix>\r\n                <mat-icon>search</mat-icon>\r\n            </button>\r\n        </mat-form-field>\r\n\r\n        <mdb-card class=\"empty-data\" *ngIf=\"this.treasuries.length == 0\" mdbWavesEffect>\r\n            <mdb-card-body>\r\n                <img src=\"/assets/img/folder-empty.png\" alt=\"empty\">\r\n                <h4>Nenhuma tesouraria encontrada</h4>\r\n                <h5>Crie uma clicando no botão acima</h5>     \r\n            </mdb-card-body>\r\n        </mdb-card>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-12\" *ngFor=\"let treasury of treasuries\">\r\n                <mdb-card mdbWavesEffect>\r\n                    <app-charts-treasury [treasury]=\"treasury\"></app-charts-treasury>\r\n                    <mdb-card-body>                    \r\n                        <button class=\"icon-more-actions\" [matMenuTriggerFor]=\"actions\" mat-icon-button>\r\n                            <mat-icon>more_horiz</mat-icon>\r\n                        </button>\r\n                        <mat-menu #actions=\"matMenu\">\r\n                            <button style=\"outline: none;\" mat-menu-item (click)=\"emitterReport(treasury.id)\"><mat-icon>description</mat-icon>Ver relatório</button>\r\n                            <button mat-menu-item (click)=\"showHistoric(treasury.id)\"><mat-icon>batch_prediction</mat-icon>Ver histórico</button>\r\n                            <button mat-menu-item (click)=\"takeInventory(treasury.id)\"><mat-icon>style</mat-icon>Fazer inventário</button>\r\n                        </mat-menu>  \r\n                        <mdb-card-title>\r\n                            <h4>{{ treasury.name }}</h4>\r\n                        </mdb-card-title>\r\n                        <mdb-card-text>Atualizado em {{ treasury.updated | date: 'dd/MM/yyyy' }}</mdb-card-text>  \r\n                        <button mat-fab class=\"warning-color text-white z-depth-0\" style=\"margin-right: 5px;\" (click)=\"addTransactions(treasury.id)\">\r\n                            <mat-icon>add</mat-icon>\r\n                        </button>\r\n                        <button mat-fab class=\"indigo text-white z-depth-0\" style=\"margin-right: 5px;\" (click)=\"showModalUpdate(treasury)\">\r\n                            <mat-icon>edit</mat-icon>\r\n                        </button>\r\n                        <button mat-fab class=\"danger-color text-white z-depth-0\" (click)=\"deleteTreasury(treasury)\">\r\n                            <mat-icon>delete</mat-icon>\r\n                        </button>\r\n                        <hr>\r\n                        <p><mdb-icon fas icon=\"quote-left\"></mdb-icon> {{ treasury.details != null ? treasury.details: 'Não há detalhes para essa tesouraria' }}</p>\r\n                    </mdb-card-body>\r\n                </mdb-card>\r\n            </div>\r\n        </div>\r\n        <div class=\"main-footer\">\r\n            <div class=\"row\">\r\n                <div class=\"col\">\r\n                    <app-pagination #paginationMobile (click)=\"changePage(paginationMobile)\"></app-pagination>\r\n                </div>\r\n            </div>\r\n        </div> \r\n    </div>\r\n</div>\r\n<app-footer></app-footer>\r\n\r\n<div mdbModal #modalCreate=\"mdbModal\" class=\"modal fade\" style=\"overflow-y: auto\" >\r\n    <div class=\"modal-dialog modal-sm modal-dialog-centered\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <button type=\"button\" class=\"close pull-right btn-hide-modal\" (click)=\"hideModalCreate()\">\r\n            <span>×</span>\r\n          </button>\r\n          <h4 class=\"modal-title w-100\">NOVA TESOURARIA</h4>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n            <form [formGroup]=\"f\">\r\n                <div class=\"row\">\r\n                    <div class=\"col\">\r\n                        <mat-form-field  class=\"input-width\">\r\n                            <input matInput placeholder=\"Nome\" formControlName=\"name\" required>\r\n                            <mat-error>Informe no mínimo quatro caracteres</mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col\">\r\n                        <mat-form-field  class=\"input-width\">\r\n                            <input matInput placeholder=\"Montante inicial\" formControlName=\"initialAmount\" currencyMask [options]=\"{ prefix: 'R$ ', thousands: '.', decimal: ',' }\" required>\r\n                            <mat-error>Esse campo precisa ser preenchido</mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col\">\r\n                        <mat-form-field class=\"input-width\">\r\n                            <textarea  #input matInput placeholder=\"Detalhes\" maxlength=\"200\" formControlName=\"details\"></textarea>\r\n                            <mat-error>Informe um valor com no mínimo quatro caracteres</mat-error>\r\n                            <mat-hint>{{input.value?.length || 0}}/200</mat-hint>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        <div class=\"modal-footer\"> \r\n          <button type=\"button\" block=\"true\" mdbBtn color=\"info\" class=\"relative waves-light z-depth-0\" [disabled]=\"!f.valid\" (click)=\"createOrUpdateTreasury(f.value)\" mdbWavesEffect>CADASTRAR</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n</div>\r\n<div mdbModal #modalUpdate=\"mdbModal\" class=\"modal fade\" style=\"overflow-y: auto\" >\r\n    <div class=\"modal-dialog modal-sm modal-dialog-centered\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <button type=\"button\" class=\"close pull-right btn-hide-modal\" aria-label=\"Close\" (click)=\"hideModalUpdate()\">\r\n            <span aria-hidden=\"true\">×</span>\r\n          </button>\r\n          <h4 class=\"modal-title w-100\">EDITAR TESOURARIA</h4>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n            <form [formGroup]=\"f\">\r\n                <div class=\"row\">\r\n                    <div class=\"col\">\r\n                        <mat-form-field  class=\"input-width\">\r\n                            <input matInput placeholder=\"Nome\" formControlName=\"name\" required>\r\n                            <mat-error>Informe no mínimo quatro caracteres</mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col\">\r\n                        <mat-form-field  class=\"input-width\">\r\n                            <input matInput placeholder=\"Montante inicial\" formControlName=\"initialAmount\" currencyMask [options]=\"{ prefix: 'R$ ', thousands: '.', decimal: ',' }\">\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col\">\r\n                        <mat-form-field class=\"input-width\">\r\n                            <textarea  #input matInput placeholder=\"Detalhes\" maxlength=\"200\" formControlName=\"details\"></textarea>\r\n                            <mat-error>Informe um valor com no mínimo quatro caracteres</mat-error>\r\n                            <mat-hint>{{input.value?.length || 0}}/200</mat-hint>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        <div class=\"modal-footer\"> \r\n          <button type=\"button\" block=\"true\" mdbBtn color=\"indigo\" class=\"relative waves-light z-depth-0\" [disabled]=\"!f.valid\" (click)=\"createOrUpdateTreasury(f.value)\" mdbWavesEffect>ATUALIZAR</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { TreasuryComponent } from './treasury.component';\r\nimport { TransactionsComponent } from './transactions/transactions.component';\r\nimport { TreasuryService } from 'src/app/shared/services/treasury.service';\r\nimport { ReportComponent } from './report/report.component';\r\nimport { LayoutModule } from 'src/app/layout/layout.module';\r\nimport { HistoricComponent } from './historic/historic.component';\r\nimport { InventoryComponent } from './inventory/inventory.component';\r\nimport { AccountComponent } from './account/account.component';\r\nimport { UserService } from 'src/app/shared/services/user.service';\r\nimport { IncomeComponent } from './income/income.component';\r\nimport { ChartsTreasuryComponent } from './charts-treasury/charts-treasury.component';\r\nimport { TransactionsService } from 'src/app/shared/services/transactions.service';\r\nimport { ReportService } from 'src/app/shared/services/report.service';\r\nimport { HistoricService } from 'src/app/shared/services/historic.service';\r\nimport { InventoryService } from 'src/app/shared/services/inventory.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TreasuryComponent,\r\n    TransactionsComponent,\r\n    ReportComponent,\r\n    HistoricComponent,\r\n    InventoryComponent,\r\n    AccountComponent,\r\n    IncomeComponent,\r\n    ChartsTreasuryComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    LayoutModule,\r\n  ],\r\n  exports: [\r\n    TreasuryComponent\r\n  ],\r\n  providers: [\r\n    TreasuryService, \r\n    TransactionsService,\r\n    ReportService,\r\n    HistoricService,\r\n    InventoryService,\r\n    UserService\r\n  ]\r\n})\r\nexport class TreasuryModule { }","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport { AuthService } from 'src/app/shared/services/auth.service';\r\nimport { User } from 'src/app/shared/models/user.entity';\r\n\r\nconst SERVER_OFFLINE = 0;\r\n\r\n@Component({\r\n  selector: 'app-auth-user',\r\n  templateUrl: './auth-user.component.html',\r\n  styleUrls: ['./auth-user.component.scss']\r\n})\r\nexport class AuthUserComponent implements OnInit {\r\n\r\n  public form: FormGroup;\r\n  public loading: boolean = false;\r\n\r\n  public constructor(\r\n                      private readonly _fb: FormBuilder, \r\n                      private readonly router: Router,\r\n                      private readonly toastr: ToastrService,\r\n                      private readonly service: AuthService\r\n                    ) { }\r\n\r\n  public toNewUser() {\r\n    this.router.navigateByUrl('/user/create');\r\n  }\r\n\r\n  public signIn(user: User) {\r\n    this.loading = true;\r\n    this.service.loginUser(user).subscribe( res => {\r\n      this.decodePayloadJWT(res.access_token);\r\n      this.router.navigateByUrl('/home');\r\n      this.toastr.success('Você está autenticado', 'Tudo ok', { progressBar: true, positionClass: 'toast-bottom-center' });\r\n    },\r\n    err => {\r\n      this.errorMessage(err);\r\n    }).add( () => {\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  public decodePayloadJWT(token: any): any {\r\n    localStorage.setItem(\"id_token\", token);\r\n    try {\r\n      const result = jwt_decode(token);\r\n      console.log(result);\r\n      localStorage.setItem('name_user', result.name);\r\n      localStorage.setItem('user_id', result.userid);\r\n      localStorage.setItem('user', result.user);\r\n    }catch (Error) {\r\n      console.log(Error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public showPassword(input: any, icon: any) {\r\n    input.type = 'text';\r\n    icon._elementRef.nativeElement.firstChild.data = 'visibility';\r\n  }\r\n\r\n  public hidePassword(input: any, icon: any) {\r\n    icon._elementRef.nativeElement.firstChild.data = 'visibility_off';\r\n    input.type = 'password';\r\n  }\r\n\r\n  private errorMessage(response: any) {\r\n    const error = response.error;\r\n    if(response.status == SERVER_OFFLINE) {\r\n      this.toastr.error('Servidor Inacessível', 'ERRO', { progressBar: true, positionClass: 'toast-bottom-center' });\r\n    }\r\n    else {\r\n      this.toastr.error(response.error.details, 'ERRO', { progressBar: true, positionClass: 'toast-bottom-center' });\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this._fb.group({\r\n      username: ['samuelgsete', [Validators.required, Validators.minLength(3), Validators.maxLength(30)]],\r\n      password: ['1234', [Validators.required, Validators.minLength(3), Validators.maxLength(30)]]\r\n    });\r\n  }\r\n}","<div class=\"login\"> \r\n    <div class=\"progress-bar\" *ngIf=\"loading\">\r\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\r\n    </div> \r\n    <div class=\"content z-depth-2\">\r\n        <div class=\"header\">\r\n            <img src=\"/assets/img/avatar/avatar-user.png\" alt=\"usuario\" width=\"80px\" height=\"80px\">\r\n            <h5>Usuário</h5>\r\n            <p>Login</p>\r\n            <span>Informe seus dados</span>\r\n        </div>\r\n        <div class=\"main\">\r\n            <form [formGroup]=\"form\">\r\n                <mat-form-field class=\"input-width\" appearance=\"outline\">\r\n                    <mat-label>Usuario</mat-label>\r\n                    <input formControlName=\"username\" matInput required>\r\n                    <mat-icon matSuffix>person</mat-icon>\r\n                    <mat-error>preencha o usuário corretamente</mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field class=\"input-width\" appearance=\"outline\">\r\n                    <mat-label>Senha</mat-label>\r\n                    <input type=\"password\" formControlName=\"password\" #pass matInput required>\r\n                    <mat-icon #icon style=\"cursor: pointer;\" (mousedown)=\"showPassword(pass, icon)\" (mouseup)=\"hidePassword(pass, icon)\" matSuffix>visibility_off</mat-icon>\r\n                    <mat-error>preencha a senha corretamente</mat-error>\r\n                </mat-form-field>\r\n                <button mdbBtn type=\"button\" block=\"true\" color=\"indigo\" [disabled]=\"!form.valid\" (click)=\"signIn(form.value)\" mdbWavesEffect>ACESSAR</button> \r\n                <p class=\"link\" (click)=\"toNewUser()\">Criar nova conta</p>         \r\n            </form>\r\n        </div>\r\n        <div class=\"footer\">\r\n            <hr>\r\n            <p>© 2020 Todos os direitos autorais estão reservados</p>\r\n        </div>\r\n    </div>\r\n    <div class=\"mobile\">\r\n\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormControl, Validators } from '@angular/forms';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nimport { UserService } from 'src/app/shared/services/user.service';\r\nconst SERVER_OFFLINE = 0;\r\n\r\n@Component({\r\n  selector: 'app-confirm-account',\r\n  templateUrl: './confirm-account.component.html',\r\n  styleUrls: ['./confirm-account.component.scss']\r\n})\r\nexport class ConfirmAccountComponent implements OnInit {\r\n\r\n  public code: FormControl;\r\n  public email: string = '';\r\n  public name: string = '';\r\n  public loading: boolean = false;\r\n \r\n  public constructor(\r\n                      private readonly router: Router, \r\n                      private readonly toastr: ToastrService,\r\n                      private readonly service: UserService\r\n                    ) \r\n  { \r\n    this.email = localStorage.getItem('email');\r\n    this.name = localStorage.getItem('name');\r\n\r\n    if(this.email === null || this.name === null) {\r\n      this.toNewUser();\r\n    }\r\n  }\r\n\r\n  public toNewUser() {\r\n    this.router.navigateByUrl('/user/create');\r\n  }\r\n\r\n  public finalizeRegistration() {\r\n    this.loading = true;\r\n    this.service.finalizeRegistration(this.code.value).subscribe( res => {\r\n      localStorage.removeItem('email');\r\n      localStorage.removeItem('name');\r\n      this.toastr.success('Criado com sucesso', 'Tudo ok', { progressBar: true, positionClass: 'toast-bottom-center' });\r\n      this.router.navigateByUrl('/user/auth');\r\n    },\r\n    err => {\r\n      console.log(err);\r\n      this.errorMessage(err);\r\n    }).add( () => {\r\n      this.loading = false;\r\n    });    \r\n  }\r\n\r\n  public resendCode() {\r\n    this.loading = true;\r\n    this.service.resendCode(this.email).subscribe( res => {\r\n      this.toastr.info('Código reenviado', 'Tudo ok', { progressBar: true, positionClass: 'toast-bottom-center'});\r\n    },\r\n    err => {\r\n      this.errorMessage(err);\r\n    }).add( () => {\r\n      this.loading = false;\r\n    });  \r\n  }\r\n\r\n  private errorMessage(response: any) {\r\n    const error = response.error;\r\n    if(response.status == SERVER_OFFLINE) {\r\n      this.toastr.error('Servidor Inacessível', 'ERRO', { progressBar: true, positionClass: 'toast-bottom-center' });\r\n    }\r\n    else {\r\n      this.toastr.error(error.details, 'Ah não!', { progressBar: true, positionClass: 'toast-bottom-center' });\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.code = new FormControl('59334', {\r\n      validators: [\r\n        Validators.required, \r\n        Validators.minLength(5), \r\n        Validators.maxLength(5)\r\n      ]\r\n    });\r\n  }\r\n}","<div class=\"confirm-user\">\r\n    <div class=\"progress-bar\" *ngIf=\"loading\">\r\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\r\n    </div>\r\n    <div class=\"about\">\r\n        <img src=\"/assets/img/wait.png\" alt=\"usuario\" width=\"80px\" height=\"80px\">\r\n        <h1>Estamos quase lá</h1>\r\n        <p><mdb-icon fas icon=\"quote-left\"></mdb-icon> Sua conta está quase pronta, precisamos confirmar se você está utilizando um email válido. Siga as intruções para que o seu cadastro seja ativado com sucesso. Caso deseje pode efetuar um novo cadastro clicando no botão abaixo <mdb-icon fas icon=\"quote-right\"></mdb-icon> </p>\r\n        <button mdbBtn type=\"button\" color=\"indigo\" outline=\"true\" (click)=\"toNewUser()\" mdbWavesEffect>VOLTAR E RECOMEÇAR</button> \r\n    </div>\r\n    <div class=\"main z-depth-2\">\r\n        <div class=\"header\">\r\n            <img src=\"/assets/img/avatar/avatar-new-user.png\" alt=\"usuario\" width=\"80px\" height=\"80px\">\r\n            <h6>Confirme seu cadastro</h6>\r\n            <p>Sua conta precisa ser confirmada</p>\r\n            <mdb-badge style=\"font-size: 13px; font-weight: normal;\" pill=\"true\" primary=\"true\">{{ email }}</mdb-badge>\r\n        </div>\r\n        <div class=\"body\">\r\n            <div class=\"form\">\r\n                <p>\r\n                    Olá {{ name }}\r\n                    um código de verificação foi enviado para \r\n                    o seu email, insirá-o para confirmar seu cadastro. Caso for necessário\r\n                    click <span class=\"link\" (click)=\"resendCode()\">aqui</span> para reenviar o código. Atenção, seu cadastro só será confirmado\r\n                    se o código estiver correto.\r\n                </p>\r\n                <mat-form-field class=\"input-width\" appearance=\"outline\">\r\n                    <mat-label>Código</mat-label>\r\n                    <input [formControl]=\"code\" matInput autofocus required>\r\n                    <mat-icon matSuffix>code</mat-icon>\r\n                    <mat-error>Por favor insira o código</mat-error>\r\n                </mat-form-field>\r\n                <button class=\"z-depth-0\" mdbBtn type=\"button\" block=\"true\" color=\"indigo\" [disabled]=\"code.invalid\" (click)=\"finalizeRegistration()\" mdbWavesEffect>FINALIZAR CADASTRO</button>\r\n            </div>\r\n        </div>\r\n        <div class=\"footer\">\r\n            <hr>\r\n            <p>© 2020 Todos os direitos autorais estão reservados</p>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { User } from 'src/app/shared/models/user.entity';\r\nimport { UserService } from 'src/app/shared/services/user.service';\r\nimport { PasswordValidator } from 'src/app/shared/validators/password.validator';\r\n\r\nconst SERVER_OFFLINE = 0;\r\n\r\n@Component({\r\n  selector: 'app-create-user',\r\n  templateUrl: './create-user.component.html',\r\n  styleUrls: ['./create-user.component.scss']\r\n})\r\nexport class CreateUserComponent implements OnInit {\r\n\r\n  public form: FormGroup;\r\n  public loading = false;\r\n  public passwordValidator = new PasswordValidator();\r\n\r\n  public constructor(\r\n                        private readonly router: Router, \r\n                        private readonly _fb: FormBuilder, \r\n                        private readonly toastr: ToastrService,\r\n                        private readonly service: UserService\r\n                    ) \r\n  { }\r\n\r\n  public toLogin() {\r\n    this.router.navigateByUrl('/user/auth');\r\n  }\r\n\r\n  public createUser(data: any) {\r\n    this.loading = true;\r\n\r\n    let user = new User({\r\n      name: data.name,\r\n      surname: data.surname,\r\n      email: data.email,\r\n      whatzapp: data.whatzapp,\r\n      username: data.username,\r\n      password: data.password\r\n    });\r\n\r\n    localStorage.setItem('name', user.name);\r\n    localStorage.setItem('email', user.email);\r\n    \r\n    this.service.create(user).subscribe( response => {\r\n      this.router.navigateByUrl('/confirm/account');\r\n    },\r\n    erro => {\r\n      localStorage.removeItem('email');\r\n      localStorage.removeItem('name');\r\n      this.errorMessage(erro);\r\n    }).add( () => {\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  public showPassword(input: any, icon: any) {\r\n    input.type = 'text';\r\n    icon._elementRef.nativeElement.firstChild.data = 'visibility';\r\n  }\r\n\r\n  public hidePassword(input: any, icon: any) {\r\n    icon._elementRef.nativeElement.firstChild.data = 'visibility_off';\r\n    input.type = 'password';\r\n  }\r\n\r\n  private errorMessage(response: any) {\r\n    const error = response.error;\r\n    if(response.status == SERVER_OFFLINE) {\r\n      this.toastr.error('Servidor Inacessível', 'ERRO', { progressBar: true, positionClass: 'toast-bottom-center' });\r\n    }\r\n    else {\r\n      this.toastr.error(error.details, 'Ah não!', { progressBar: true, positionClass: 'toast-bottom-center' });\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this._fb.group({\r\n      name: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(30)]],\r\n      surname: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(30)]],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      whatzapp: ['', [Validators.required]],\r\n      username: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(30)]],\r\n      password: ['', Validators.required],\r\n      confirmPassword: ['', Validators.required ]\r\n    }, {\r\n      validators: this.passwordValidator.confirmed('password', 'confirmPassword')\r\n    });\r\n  }\r\n}","<div class=\"create\">\r\n    <div class=\"progress-bar\" *ngIf=\"loading\">\r\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\r\n    </div>\r\n    <div class=\"about\">\r\n        <img src=\"/assets/img/computer.png\" alt=\"usuario\" width=\"80px\" height=\"80px\">\r\n        <h1>Crie sua conta gratuita</h1>\r\n        <p><mdb-icon fas icon=\"quote-left\"></mdb-icon> Para acessar nosso serviço você precisa relizar um cadastro, não se preocupe, vai ser rápido. Caso ja tenha criado uma conta clique no botão abaixo para ser direcionado à tela de login <mdb-icon fas icon=\"quote-right\"></mdb-icon> </p>\r\n        <button mdbBtn type=\"button\" color=\"indigo\" outline=\"true\" (click)=\"toLogin()\" mdbWavesEffect>JA ESTOU CADASTRADO</button> \r\n    </div>\r\n    <div class=\"main z-depth-2\">\r\n        <div class=\"header\">\r\n            <img src=\"/assets/img/avatar/avatar-new-user.png\" alt=\"usuario\" width=\"80px\" height=\"80px\">\r\n            <h6>Crie sua conta gratuita</h6>\r\n            <p>Informe seus dados</p>\r\n        </div>\r\n        <div class=\"body\">\r\n            <form [formGroup]=\"form\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6\">\r\n                        <mat-form-field class=\"input-width\" appearance=\"outline\">\r\n                            <mat-label>Nome</mat-label>\r\n                            <input formControlName=\"name\" matInput required>\r\n                            <mat-icon matSuffix>face</mat-icon>\r\n                            <mat-error>preencha o nome corretamente</mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6\">\r\n                        <mat-form-field class=\"input-width\" appearance=\"outline\">\r\n                            <mat-label>Sobrenome</mat-label>\r\n                            <input formControlName=\"surname\" matInput required>\r\n                            <mat-icon matSuffix>account_circle</mat-icon>\r\n                            <mat-error>preencha o sobrenome corretamente</mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n                        <mat-form-field class=\"input-width\" appearance=\"outline\">\r\n                            <mat-label>Email</mat-label>\r\n                            <input formControlName=\"email\" matInput required>\r\n                            <mat-icon matSuffix>email</mat-icon>\r\n                            <mat-error>preencha o email corretamente</mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6\">\r\n                        <mat-form-field class=\"input-width\" appearance=\"outline\">\r\n                            <mat-label>Whatzapp</mat-label>\r\n                            <input formControlName=\"whatzapp\" matInput required mask=\"(00) 00000-0000\">\r\n                            <mat-icon matSuffix>phone</mat-icon>\r\n                            <mat-error>Preencha essa capo corretamente</mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6\">\r\n                        <mat-form-field class=\"input-width\" appearance=\"outline\">\r\n                            <mat-label>Login</mat-label>\r\n                            <input formControlName=\"username\" matInput required>\r\n                            <mat-icon matSuffix>security</mat-icon>\r\n                            <mat-error>preencha o nome corretamente</mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n               \r\n                <div class=\"row\">\r\n                    <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6\">\r\n                        <mat-form-field class=\"input-width\" appearance=\"outline\">\r\n                            <mat-label>Senha</mat-label>\r\n                            <input #pass formControlName=\"password\" type=\"password\" matInput required>\r\n                            <mat-icon #icon style=\"cursor: pointer;\" (mousedown)=\"showPassword(pass, icon)\" (mouseup)=\"hidePassword(pass, icon)\" matSuffix>visibility_off</mat-icon>\r\n                            <mat-error>preencha a senha corretamente</mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6\">\r\n                        <mat-form-field class=\"input-width\" appearance=\"outline\">\r\n                            <mat-label>Confirmação de senha</mat-label>\r\n                            <input #pass2 formControlName=\"confirmPassword\" type=\"password\" matInput required>\r\n                            <mat-icon #icon2 style=\"cursor: pointer;\" (mousedown)=\"showPassword(pass2, icon2)\" (mouseup)=\"hidePassword(pass2, icon2)\" matSuffix>visibility_off</mat-icon>\r\n                            <mat-error>preencha a confirmação de senha corretamente</mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n                <button mdbBtn type=\"button\" block=\"true\" color=\"indigo\" [disabled]=\"!form.valid\" (click)=\"createUser(form.value)\" mdbWavesEffect>CRIAR CONTA</button>\r\n            </form> \r\n        </div>\r\n        <div class=\"footer\">\r\n            <hr>\r\n            <p>© 2020 Todos os direitos autorais estão reservados</p>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AppRoutingModule } from 'src/app/app.routing.module';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { CreateUserComponent } from './create-user/create-user.component';\r\nimport { ConfirmAccountComponent } from './create-user/confirm-account/confirm-account.component';\r\nimport { UserService } from 'src/app/shared/services/user.service';\r\nimport { AuthUserComponent } from './auth-user/auth-user.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CreateUserComponent, \r\n    AuthUserComponent, \r\n    ConfirmAccountComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    AppRoutingModule,\r\n  ],\r\n  exports:[CreateUserComponent],\r\n  providers: [UserService]\r\n})\r\nexport class UserModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AuthService } from 'src/app/shared/services/auth.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Injectable()\r\nexport class AuthUserGuard implements CanActivate {\r\n\r\n  public constructor(private router: Router, private servico: AuthService, private toastr: ToastrService) {}\r\n\r\n  canActivate(\r\n      route: ActivatedRouteSnapshot,\r\n      state: RouterStateSnapshot\r\n  ): Observable<boolean> | boolean\r\n  {\r\n    if(this.servico.userIsAutenticate()) {\r\n      return true;\r\n    }\r\n\r\n    this.toastr.error('Você não está autenticado', 'ERRO', { progressBar: true, positionClass: 'toast-bottom-center' });\r\n    this.router.navigateByUrl('/user/auth');\r\n    \r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class AuthUserInterceptor implements HttpInterceptor {\r\n\r\n  public constructor() { }\r\n\r\n  public intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const idToken = localStorage.getItem(\"id_token\");\r\n    const userId = localStorage.getItem(\"user_id\");\r\n\r\n    if(idToken) {\r\n      const cloned = req.clone({\r\n        headers: req.headers.set(\"Authorization\", \"Bearer \" + idToken).set(\"userId\", userId)\r\n      });\r\n      return next.handle(cloned);\r\n    }\r\n\r\n    return next.handle(req);\r\n  }\r\n}\r\n","export enum TransactionType {\r\n    RECIPE = 'RECEITA',\r\n    EXPENSE = 'DESPESA'\r\n}","import { TransactionType } from './enums/transaction-type.enum';\r\n\r\nexport class Expense {\r\n\r\n    public id: number;\r\n    public description: string;\r\n    public value: number;\r\n    public registeredIn: Date;\r\n    public type: TransactionType;\r\n    public details: string;\r\n\r\n    public constructor(values: Object = {}) { Object.assign(this, values) }\r\n}","export class Income {\r\n\r\n    public initialAmount: number = 0;\r\n    public currentBalance: number = 0;\r\n    public incomeRecipes: number = 0;\r\n    public incomeExpenses: number = 0;\r\n\r\n    public constructor(values: Object = {}) { Object.assign(this, values) }\r\n}","export class Inventory{\r\n\r\n    public id: number;\r\n    public actualBalance: number;\r\n    public currentBalance: number;\r\n    public discrepancy: number;\r\n    public registeredIn: Date;\r\n\r\n    public constructor(values: Object = {}) { Object.assign(this, values) }\r\n}","export class Pagination {\r\n\r\n    public pageCurrent: number = 1;\r\n    public filter: string = '';\r\n    public count: number;\r\n\r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n    }\r\n}","import { TransactionType } from './enums/transaction-type.enum';\r\n\r\nexport class Recipe {\r\n\r\n    public id: number;\r\n    public description: string;\r\n    public value: number;\r\n    public offerer: string;\r\n    public registeredIn: Date;\r\n    public type: TransactionType;\r\n    public details: string;\r\n\r\n    public constructor(values: Object = {}) { Object.assign(this, values) }\r\n}","import { Recipe } from './recipe.entity';\r\nimport { Expense } from './expense.entity';\r\n\r\nexport class Report {\r\n\r\n    public balanceMonthly: number = 0;\r\n    public incomeRecipesMonthly: number = 0;\r\n    public incomeExpensesMonthly: number = 0;\r\n    public recipes: Recipe[] = [];\r\n    public expenses: Expense[] = []; \r\n\r\n\r\n    public constructor(values: Object = {}) { Object.assign(this, values) }\r\n}","import { Recipe } from './recipe.entity';\r\nimport { Expense } from './expense.entity';\r\nimport { Inventory } from './inventory.entity';\r\n\r\nexport class Treasury {\r\n\r\n    public id: number;\r\n    public name: string;\r\n    public initialAmount: number;\r\n    public currentBalance: number;\r\n    public recipes: Recipe[] = [];\r\n    public expenses: Expense[] = [];\r\n    public incomeRecipes: number;\r\n    public incomeExpenses: number;\r\n    public inventories: Inventory[] = [];\r\n    public details: string;\r\n    public updated: Date;\r\n    public userId: number;\r\n\r\n    public constructor(values: Object = {}) { Object.assign(this, values) }\r\n}","export class User {\r\n\r\n    public id: number;\r\n    public username: string;\r\n    public password: string;\r\n    public name: string;\r\n    public surname: string;\r\n    public email: string;\r\n    public whatzapp: string;\r\n    public isActive: boolean;\r\n    public updated: Date = new Date();\r\n\r\n    public constructor(values: Object = {}) { Object.assign(this, values) }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { PaginationService } from './pagination.service';\r\n\r\n@Component({\r\n  selector: 'app-pagination',\r\n  templateUrl: './pagination.component.html',\r\n  styleUrls: ['./pagination.component.scss']\r\n})\r\nexport class PaginationComponent implements OnInit {\r\n\r\n  public next = { label: 'Próxima', disabled: false };\r\n  public previous = { label: 'Anterior', disabled: true };\r\n  public pageCurrent = { label: 1, isActive: true };\r\n  public pages: any[] = [];\r\n  public isVisible: boolean = false;\r\n\r\n  public constructor(private paginationService: PaginationService) { \r\n    this.paginationService.emitirTamanho.subscribe(value => {\r\n      if(value.size > 6 ) {\r\n        this.isVisible = true;\r\n        this.generatePages(value.size, value.pageCurrent);\r\n      }\r\n      else {\r\n        this.isVisible = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  public generatePages(size: number, indexPage:number) {\r\n    this.pages = [];\r\n    let n = this.getLength(size, 6);\r\n    for(let i = 1; i <= n; i++) {\r\n      this.pages.push({ label: i, isActive: false });\r\n    }\r\n\r\n    let page = this.pages.filter(page => {\r\n      return page.label == indexPage;\r\n    })[0];\r\n\r\n    this.pageCurrent = page;\r\n    this.pageCurrent.isActive = true;\r\n  }\r\n\r\n  public getLength(size: number, count: number) {\r\n    let n = size/count;\r\n    let x = parseInt(n.toFixed());\r\n    if(x < n) {\r\n      return x + 1;\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n  public exchangePage(index: number) {\r\n    this.pageCurrent.isActive = false;\r\n    this.pages[index].isActive = true;\r\n    this.pageCurrent = this.pages[index];\r\n  }\r\n\r\n  public nextPage() {\r\n    let index = this.getIndex(this.pageCurrent);\r\n    this.pageCurrent.isActive = false;\r\n    let page = this.pages[index + 1];\r\n    page.isActive = true;\r\n    this.pageCurrent = page;\r\n       \r\n  }\r\n\r\n  public previousPage() {\r\n    let index = this.getIndex(this.pageCurrent);\r\n    this.pageCurrent.isActive = false;\r\n    let page = this.pages[index - 1];\r\n    page.isActive = true;\r\n    this.pageCurrent = page;\r\n  }\r\n\r\n  public getIndex(page: any) {\r\n    return this.pages.indexOf(page);\r\n  }\r\n\r\n  public eventChange() {\r\n    let index = this.getIndex(this.pageCurrent);\r\n    \r\n    if(index == 0) {\r\n      this.previous.disabled = true;\r\n    }\r\n\r\n    if(index > 0) {\r\n      this.previous.disabled = false;\r\n    }\r\n\r\n    if(index == this.pages.length - 1) {\r\n      this.next.disabled = true;\r\n    }\r\n\r\n    if(index < this.pages.length - 1) {\r\n      this.next.disabled = false;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {}\r\n}\r\n","<nav *ngIf=\"isVisible\">\r\n    <ul class=\"pagination pg-darkgrey\" (click)=\"eventChange()\">\r\n        <li class=\"page-item \" [ngClass]=\"{ 'disabled': previous.disabled == true }\">\r\n            <a class=\"page-link\" (click)=\"previousPage()\">{{ previous.label }}</a>\r\n        </li>\r\n        <li class=\"page-item\" [ngClass]=\"{ 'active': page.isActive == true }\" *ngFor=\"let page of pages; let i = index\">\r\n            <a class=\"page-link z-depth-0\" (click)=\"exchangePage(i)\">{{ page.label }}</a>\r\n        </li>\r\n        <li class=\"page-item\" [ngClass]=\"{ 'disabled': next.disabled == true }\">\r\n            <a class=\"page-link\" (click)=\"nextPage()\" >{{ next.label }}</a>\r\n        </li>\r\n    </ul>\r\n</nav>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PaginationComponent } from './pagination.component';\r\n\r\n@NgModule({\r\n  declarations: [ PaginationComponent ],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [ PaginationComponent ]\r\n})\r\nexport class PaginationModule { }\r\n","import { Injectable, EventEmitter } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class PaginationService {\r\n\r\n  public emitirTamanho = new EventEmitter<any>();\r\n\r\n  public constructor() { \r\n    this.emitirTamanho.emit()\r\n  }\r\n\r\n  public loader(size: number, pageCurrent: number) {\r\n    this.emitirTamanho.emit({ size, pageCurrent });\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nimport { User } from '../models/user.entity';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthService  {\r\n\r\n  private urlBase: string = 'http://localhost:3000/auth/login';\r\n\r\n  public constructor(\r\n                      private http: HttpClient, \r\n                      private router: Router,\r\n                      private toastr: ToastrService\r\n                    ) {}\r\n\r\n  public loginUser(user: User): Observable<any> {\r\n    return this.http.post<any>(this.urlBase, user);\r\n  }\r\n\r\n  public logoutUser() {\r\n    localStorage.removeItem('id_token');\r\n    localStorage.removeItem('user_id');\r\n    localStorage.removeItem('name_user');\r\n    localStorage.removeItem('user');\r\n    this.router.navigateByUrl('/user/auth');\r\n    this.toastr.success('Desconectado com sucesso', 'Tudo ok!', { progressBar: true, positionClass: 'toast-bottom-center' });\r\n  }\r\n\r\n  public userIsAutenticate(): boolean {\r\n    const idToken = localStorage.getItem(\"id_token\");\r\n    if(idToken) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class HistoricService {\r\n\r\n    private urlBase: string = 'http://localhost:3000/historic';\r\n\r\n    public constructor(private readonly http: HttpClient) {}\r\n\r\n    public getHistoric(treasuryId: number, year: number) {\r\n        const _params = new HttpParams().set('year', `${year}`);\r\n\r\n        return this.http.get<any>(this.urlBase.concat(`/${treasuryId}`), { observe: 'response', params: _params });\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { Inventory } from '../models/inventory.entity';\r\n\r\n@Injectable()\r\nexport class InventoryService {\r\n\r\n    private urlBase: string = 'http://localhost:3000/inventory';\r\n\r\n    public constructor(private readonly http: HttpClient) {}\r\n\r\n    public findAll(treasuryId: number) {\r\n        return this.http.get<Inventory[]>(this.urlBase.concat(`/${treasuryId}`))\r\n    }\r\n\r\n    public save(newInventory: Inventory, treasuryId: number) {\r\n        return this.http.post<Inventory>(this.urlBase.concat(`/${treasuryId}`), newInventory);\r\n    }\r\n\r\n    public update(inventoryUpdated: Inventory, treasuryId: number) {\r\n        return this.http.put<Inventory>(this.urlBase.concat(`/${treasuryId}`), inventoryUpdated);\r\n    }\r\n\r\n    public delete(inventoryId: number, treasuryId: number) {\r\n        const options = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json'\r\n            }),\r\n            body: {\r\n              inventoryId: inventoryId\r\n            }\r\n        }\r\n        return this.http.delete<Inventory>(this.urlBase.concat(`/${treasuryId}`), options);\r\n    }\r\n}","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ReportService {\r\n\r\n    private urlBase: string = 'http://localhost:3000/report';\r\n\r\n    public constructor(private readonly http: HttpClient) {}\r\n\r\n    public getReport(id: number, year: number, month: number) {\r\n        const _params = new HttpParams().set('year', `${year}`).set('month', `${month}`);\r\n\r\n        return this.http.get<any>(this.urlBase.concat(`/${id}`), { observe: 'response', params: _params });\r\n    }\r\n\r\n    public downloadReport(id: number, year: number, month: number) {\r\n        const _params = new HttpParams().set('year', `${year}`).set('month', `${month}`);\r\n        return this.http.get<any>(this.urlBase.concat(`/download/${id}`), { responseType: 'text' as 'json', observe: 'response', params: _params });\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { Recipe } from '../models/recipe.entity';\r\nimport { Expense } from '../models/expense.entity';\r\n\r\n@Injectable()\r\nexport class TransactionsService {\r\n    private urlBase: string = 'http://localhost:3000/transactions';\r\n\r\n    public constructor(private readonly http: HttpClient) {}\r\n\r\n    public findAll(treasuryId: number, type: any, year: number, month: number) {\r\n        const _params = new HttpParams().set('year', `${year}`).set('month', `${month}`).set('type', `${type}`);\r\n        return this.http.get<any>(this.urlBase.concat(`/${treasuryId}`), {\r\n            observe: 'response', params: _params\r\n        });\r\n    }\r\n\r\n    public createRecipe(treasuryId: number, recipe: Recipe) {\r\n        return this.http.post<Recipe>(this.urlBase.concat(`/recipe/${treasuryId}`), recipe);\r\n    }\r\n\r\n    public updateRecipe(treasuryId: number, recipe: Recipe) {\r\n        return this.http.put<Recipe>(this.urlBase.concat(`/recipe/${treasuryId}`), recipe);\r\n    }\r\n\r\n    public deleteRecipe(treasuryId: number, recipeId: number) {\r\n        const options = {\r\n            headers: new HttpHeaders({\r\n              'Content-Type': 'application/json'\r\n            }),\r\n            body: {\r\n              id: recipeId\r\n            }\r\n        }\r\n        return this.http.delete<any>(this.urlBase.concat(`/recipe/${treasuryId}`), options);\r\n    }\r\n\r\n    public createExpense(treasuryId: number, expense: Expense) {\r\n        return this.http.post<Expense>(this.urlBase.concat(`/expense/${treasuryId}`), expense);\r\n    }\r\n\r\n    public updateExpense(treasuryId: number, expense: Expense) {\r\n        return this.http.put<Expense>(this.urlBase.concat(`/expense/${treasuryId}`), expense);\r\n    }\r\n\r\n    public deleteExpense(treasuryId: number, expenseId: number) {\r\n        const options = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json'\r\n            }),\r\n            body: {\r\n              id: expenseId\r\n            }\r\n        }\r\n        return this.http.delete<any>(this.urlBase.concat(`/expense/${treasuryId}`), options);\r\n    }\r\n}","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { Treasury } from '../models/treasury.entity';\r\nimport { Pagination } from '../models/pagination.entity';\r\n\r\n@Injectable()\r\nexport class TreasuryService {\r\n    \r\n    private urlBase: string = 'http://localhost:3000/treasury';\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    public findPaginate(paginacao: Pagination):Observable<any> {\r\n        const _params = new HttpParams().set('page', '' + paginacao.pageCurrent).set('filter', '' + paginacao.filter);\r\n        return this.http\r\n            .get<any>(this.urlBase, { \r\n                observe: 'response', params: _params\r\n            });\r\n    }\r\n\r\n    public findByIdWithFilter(id: number, type: any, year: number, month: number): Observable<any> {\r\n        const _params = new HttpParams().set('year', `${year}`).set('month', `${month}`).set('type', `${type}`);\r\n        return this.http.get<any>(this.urlBase.concat(`/${id}`), {\r\n            observe: 'response', params: _params\r\n        });\r\n    }\r\n\r\n    public getResume(id: number): Observable<any> {\r\n        return this.http.get<any>(this.urlBase.concat(`/resume/${id}`));\r\n    }\r\n\r\n    public remove(id: number): Observable<Treasury> {\r\n        return this.http.delete<Treasury>(this.urlBase.concat(`/${id}`));\r\n    }\r\n\r\n    public save(treasury: Treasury): Observable<Treasury> {\r\n        return this.http.post<Treasury>(this.urlBase, treasury);  \r\n    }\r\n\r\n    public update(treasury: Treasury): Observable<Treasury> {\r\n        return this.http.put<Treasury>(this.urlBase, treasury);   \r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { User } from '../models/user.entity';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n\r\n    private urlBase = \"http://localhost:3000/user\";\r\n\r\n    public constructor(private http: HttpClient) { }\r\n\r\n    public findById(id: number): Observable<User> {\r\n        return this.http.get<User>(this.urlBase.concat(`/${id}`));\r\n    }\r\n\r\n    public create(user: User): Observable<any> {\r\n        return this.http.post(this.urlBase, user);\r\n    }\r\n\r\n    public finalizeRegistration(code: string): Observable<any> {\r\n        return this.http.post(this.urlBase.concat(`/${code}`), '');\r\n    }\r\n\r\n    public resendCode(email: string): Observable<any> {\r\n        return this.http.put(this.urlBase.concat(`/resend`), { email });\r\n    }\r\n\r\n    public update(user: User): Observable<any> {\r\n        return this.http.put(this.urlBase, user);\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\r\n\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgxCurrencyModule } from \"ngx-currency\";\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { NgxMaskModule, IConfig } from 'ngx-mask'\r\n\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\n\r\nimport { PaginationModule } from './pagination/pagination.module';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    MDBBootstrapModule.forRoot(),\r\n    NgxDatatableModule ,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    ToastrModule.forRoot(),\r\n    NgxMaskModule.forRoot(),\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatSelectModule,\r\n    MatExpansionModule,\r\n    MatProgressBarModule,\r\n    MatDatepickerModule, \r\n    MatNativeDateModule, \r\n    PaginationModule\r\n  ],\r\n  exports: [\r\n    ReactiveFormsModule,\r\n    MDBBootstrapModule,\r\n    NgxDatatableModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    NgxCurrencyModule,\r\n    ToastrModule,\r\n    NgxMaskModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatSelectModule,\r\n    MatExpansionModule,\r\n    MatProgressBarModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule, \r\n    PaginationModule\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","import { FormControl } from \"@angular/forms\";\r\nimport * as moment from \"moment\";\r\n\r\nexport class DateValidator {\r\n    public validate(): any {\r\n        return (control: FormControl): { [key: string]: any } => {\r\n            const date = moment(control.value, 'DDMMYYYY', true);\r\n            if(!date.isValid()){\r\n                return { invalidDate: true };\r\n            }\r\n            return null;\r\n        };\r\n    }\r\n}","import { FormGroup } from \"@angular/forms\";\r\n\r\nexport class PasswordValidator {\r\n    public confirmed(controlName: string, matchingControlName: string){\r\n        return (formGroup: FormGroup) => {\r\n            const control = formGroup.controls[controlName];\r\n            const matchingControl = formGroup.controls[matchingControlName];\r\n            if (matchingControl.errors && !matchingControl.errors.confirmedValidator) {\r\n                return;\r\n            }\r\n            if (control.value !== matchingControl.value) {\r\n                matchingControl.setErrors({ confirmedValidator: true });\r\n            } else {\r\n                matchingControl.setErrors(null);\r\n            }\r\n        }\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}